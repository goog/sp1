     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 [FILE "fifo.c"]
     7                                          [SECTION .text]
     8 00000000                                 	ALIGN	2
     9 00000000                                 	GLOBAL	_fifo8_init
    10 00000000                                 _fifo8_init:
    11 00000000 55                              	PUSH	EBP
    12 00000001 89 E5                           	MOV	EBP,ESP
    13 00000003 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    14 00000006 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    15 00000009 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
    16 0000000C 89 48 0C                        	MOV	DWORD [12+EAX],ECX
    17 0000000F 89 10                           	MOV	DWORD [EAX],EDX
    18 00000011 89 48 10                        	MOV	DWORD [16+EAX],ECX
    19 00000014 C7 40 14 00000000               	MOV	DWORD [20+EAX],0
    20 0000001B C7 40 04 00000000               	MOV	DWORD [4+EAX],0
    21 00000022 C7 40 08 00000000               	MOV	DWORD [8+EAX],0
    22 00000029 5D                              	POP	EBP
    23 0000002A C3                              	RET
    24 0000002B 90                              	ALIGN	2
    25 0000002C                                 	GLOBAL	_fifo8_put
    26 0000002C                                 _fifo8_put:
    27 0000002C 55                              	PUSH	EBP
    28 0000002D 89 E5                           	MOV	EBP,ESP
    29 0000002F 53                              	PUSH	EBX
    30 00000030 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
    31 00000033 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
    32 00000036 83 79 10 00                     	CMP	DWORD [16+ECX],0
    33 0000003A 75 0A                           	JNE	L3
    34 0000003C 83 49 14 01                     	OR	DWORD [20+ECX],1
    35 00000040 83 C8 FF                        	OR	EAX,-1
    36 00000043                                 L2:
    37 00000043 5B                              	POP	EBX
    38 00000044 5D                              	POP	EBP
    39 00000045 C3                              	RET
    40 00000046                                 L3:
    41 00000046 8B 01                           	MOV	EAX,DWORD [ECX]
    42 00000048 8B 51 04                        	MOV	EDX,DWORD [4+ECX]
    43 0000004B 88 1C 02                        	MOV	BYTE [EDX+EAX*1],BL
    44 0000004E 8B 41 04                        	MOV	EAX,DWORD [4+ECX]
    45 00000051 40                              	INC	EAX
    46 00000052 89 41 04                        	MOV	DWORD [4+ECX],EAX
    47 00000055 3B 41 0C                        	CMP	EAX,DWORD [12+ECX]
    48 00000058 74 07                           	JE	L5
    49 0000005A                                 L4:
    50 0000005A FF 49 10                        	DEC	DWORD [16+ECX]
    51 0000005D 31 C0                           	XOR	EAX,EAX
    52 0000005F EB E2                           	JMP	L2
    53 00000061                                 L5:
    54 00000061 C7 41 04 00000000               	MOV	DWORD [4+ECX],0
    55 00000068 EB F0                           	JMP	L4
    56 0000006A                                 	ALIGN	2
    57 0000006A                                 	GLOBAL	_fifo8_get
    58 0000006A                                 _fifo8_get:
    59 0000006A 55                              	PUSH	EBP
    60 0000006B 83 C8 FF                        	OR	EAX,-1
    61 0000006E 89 E5                           	MOV	EBP,ESP
    62 00000070 56                              	PUSH	ESI
    63 00000071 53                              	PUSH	EBX
    64 00000072 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
    65 00000075 8B 71 10                        	MOV	ESI,DWORD [16+ECX]
    66 00000078 8B 59 0C                        	MOV	EBX,DWORD [12+ECX]
    67 0000007B 39 DE                           	CMP	ESI,EBX
    68 0000007D 74 19                           	JE	L6
    69 0000007F 8B 41 08                        	MOV	EAX,DWORD [8+ECX]
    70 00000082 8B 11                           	MOV	EDX,DWORD [ECX]
    71 00000084 0F B6 14 10                     	MOVZX	EDX,BYTE [EAX+EDX*1]
    72 00000088 40                              	INC	EAX
    73 00000089 89 41 08                        	MOV	DWORD [8+ECX],EAX
    74 0000008C 39 D8                           	CMP	EAX,EBX
    75 0000008E 74 0C                           	JE	L9
    76 00000090                                 L8:
    77 00000090 8D 46 01                        	LEA	EAX,DWORD [1+ESI]
    78 00000093 89 41 10                        	MOV	DWORD [16+ECX],EAX
    79 00000096 89 D0                           	MOV	EAX,EDX
    80 00000098                                 L6:
    81 00000098 5B                              	POP	EBX
    82 00000099 5E                              	POP	ESI
    83 0000009A 5D                              	POP	EBP
    84 0000009B C3                              	RET
    85 0000009C                                 L9:
    86 0000009C C7 41 08 00000000               	MOV	DWORD [8+ECX],0
    87 000000A3 EB EB                           	JMP	L8
    88 000000A5 90                              	ALIGN	2
    89 000000A6                                 	GLOBAL	_fifo8_status
    90 000000A6                                 _fifo8_status:
    91 000000A6 55                              	PUSH	EBP
    92 000000A7 89 E5                           	MOV	EBP,ESP
    93 000000A9 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    94 000000AC 5D                              	POP	EBP
    95 000000AD 8B 42 0C                        	MOV	EAX,DWORD [12+EDX]
    96 000000B0 2B 42 10                        	SUB	EAX,DWORD [16+EDX]
    97 000000B3 C3                              	RET
