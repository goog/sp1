	.file	"bootpack.c"
	.text
	.balign 2
.globl _init_gdtidt
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
_init_gdtidt:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	$2555904, %esi
	movl	$8191, %ebx
L6:
	pushl	$16530
	pushl	$0
	pushl	$-1
	pushl	%esi
	addl	$8, %esi
	call	_set_segmdesc
	addl	$16, %esp
	decl	%ebx
	jns	L6
	pushl	$16530
	movl	$2553856, %esi
	pushl	$0
	movl	$255, %ebx
	pushl	$-1
	pushl	$2555912
	call	_set_segmdesc
	pushl	$16538
	pushl	$2621440
	pushl	$524287
	pushl	$2555920
	call	_set_segmdesc
	addl	$32, %esp
	pushl	$2555904
	pushl	$65535
	call	_load_gdtr
	popl	%eax
	popl	%edx
L11:
	pushl	$0
	pushl	$0
	pushl	$0
	pushl	%esi
	addl	$8, %esi
	call	_set_gatedesc
	addl	$16, %esp
	decl	%ebx
	jns	L11
	pushl	$2553856
	pushl	$2047
	call	_load_idtr
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _set_segmdesc
	.def	_set_segmdesc;	.scl	2;	.type	32;	.endef
_set_segmdesc:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	12(%ebp), %edx
	movl	16(%ebp), %ecx
	movl	8(%ebp), %ebx
	movl	20(%ebp), %eax
	cmpl	$1048575, %edx
	jbe	L17
	shrl	$12, %edx
	orl	$32768, %eax
L17:
	movw	%dx, (%ebx)
	movb	%al, 5(%ebx)
	shrl	$16, %edx
	sarl	$8, %eax
	andl	$15, %edx
	movw	%cx, 2(%ebx)
	andl	$-16, %eax
	sarl	$16, %ecx
	orl	%eax, %edx
	movb	%cl, 4(%ebx)
	movb	%dl, 6(%ebx)
	sarl	$8, %ecx
	movb	%cl, 7(%ebx)
	popl	%ebx
	popl	%ebp
	ret
	.balign 2
.globl _set_gatedesc
	.def	_set_gatedesc;	.scl	2;	.type	32;	.endef
_set_gatedesc:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %edx
	movl	16(%ebp), %eax
	movl	20(%ebp), %ebx
	movl	12(%ebp), %ecx
	movw	%ax, 2(%edx)
	movb	%bl, 5(%edx)
	movw	%cx, (%edx)
	movl	%ebx, %eax
	sarl	$8, %eax
	sarl	$16, %ecx
	movb	%al, 4(%edx)
	movw	%cx, 6(%edx)
	popl	%ebx
	popl	%ebp
	ret
	.data
LC0:
	.ascii "hello os.\0"
LC1:
	.ascii "scrnx= %d\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-60(%ebp), %ebx
	subl	$304, %esp
	call	_init_palette
	movswl	4086,%eax
	movswl	4084,%edx
	pushl	%eax
	pushl	%edx
	pushl	4088
	call	_init_screen
	pushl	$_hankaku+1040
	pushl	$7
	pushl	$8
	pushl	$8
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfont8
	addl	$36, %esp
	pushl	$_hankaku+1056
	pushl	$7
	pushl	$8
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfont8
	pushl	$_hankaku+1072
	pushl	$7
	pushl	$8
	pushl	$24
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfont8
	addl	$48, %esp
	pushl	$_hankaku+784
	pushl	$7
	pushl	$8
	pushl	$40
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfont8
	pushl	$_hankaku+800
	pushl	$7
	pushl	$8
	pushl	$48
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfont8
	addl	$48, %esp
	pushl	$LC0
	pushl	$7
	pushl	$50
	pushl	$60
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	movswl	4084,%eax
	pushl	%eax
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	addl	$36, %esp
	pushl	%ebx
	leal	-316(%ebp), %ebx
	pushl	$7
	pushl	$64
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	movl	$2, %ecx
	movswl	4084,%eax
	leal	-16(%eax), %edx
	movl	%edx, %eax
	cltd
	idivl	%ecx
	movswl	4086,%edx
	subl	$44, %edx
	movl	%eax, %edi
	movl	%edx, %eax
	pushl	$14
	cltd
	idivl	%ecx
	pushl	%ebx
	movl	%eax, %esi
	call	_init_mouse_cursor8
	addl	$32, %esp
	pushl	$16
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	pushl	$16
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	addl	$32, %esp
L20:
	call	_io_hlt
	jmp	L20
	.data
_table_rgb.0:
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	0
	.byte	0
	.byte	-1
	.byte	-1
	.byte	0
	.byte	-1
	.byte	0
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-1
	.byte	-58
	.byte	-58
	.byte	-58
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	0
	.byte	0
	.byte	-124
	.byte	-124
	.byte	0
	.byte	-124
	.byte	0
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.byte	-124
	.text
	.balign 2
.globl _init_palette
	.def	_init_palette;	.scl	2;	.type	32;	.endef
_init_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	$_table_rgb.0
	pushl	$15
	pushl	$0
	call	_set_palette
	leave
	ret
	.balign 2
.globl _set_palette
	.def	_set_palette;	.scl	2;	.type	32;	.endef
_set_palette:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%eax
	movl	8(%ebp), %ebx
	movl	12(%ebp), %edi
	movl	16(%ebp), %esi
	call	_io_load_eflags
	movl	%eax, -16(%ebp)
	call	_io_cli
	pushl	%ebx
	pushl	$968
	call	_io_out8
	cmpl	%edi, %ebx
	popl	%ecx
	popl	%eax
	jle	L29
L31:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_io_store_eflags
L29:
	movb	(%esi), %al
	incl	%ebx
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	1(%esi), %al
	shrb	$2, %al
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	movb	2(%esi), %al
	shrb	$2, %al
	addl	$3, %esi
	movzbl	%al, %eax
	pushl	%eax
	pushl	$969
	call	_io_out8
	addl	$24, %esp
	cmpl	%edi, %ebx
	jle	L29
	jmp	L31
	.balign 2
.globl _boxfill8
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
_boxfill8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	%ecx
	movb	16(%ebp), %al
	movl	24(%ebp), %ecx
	movl	28(%ebp), %edi
	movb	%al, -13(%ebp)
	cmpl	32(%ebp), %ecx
	jg	L44
	movl	12(%ebp), %ebx
	imull	%ecx, %ebx
L42:
	movl	20(%ebp), %edx
	cmpl	%edi, %edx
	jg	L46
	movl	8(%ebp), %esi
	addl	%ebx, %esi
	addl	%edx, %esi
	movl	%esi, -20(%ebp)
L41:
	movl	-20(%ebp), %esi
	movb	-13(%ebp), %al
	incl	%edx
	movb	%al, (%esi)
	incl	%esi
	movl	%esi, -20(%ebp)
	cmpl	%edi, %edx
	jle	L41
L46:
	incl	%ecx
	addl	12(%ebp), %ebx
	cmpl	32(%ebp), %ecx
	jle	L42
L44:
	popl	%eax
	popl	%edx
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _init_screen
	.def	_init_screen;	.scl	2;	.type	32;	.endef
_init_screen:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	16(%ebp), %eax
	movl	12(%ebp), %edi
	subl	$29, %eax
	decl	%edi
	pushl	%eax
	pushl	%edi
	pushl	$0
	pushl	$0
	pushl	$14
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	subl	$28, %eax
	pushl	%eax
	pushl	%edi
	pushl	%eax
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$27, %eax
	pushl	%eax
	pushl	%edi
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	decl	%eax
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	%edi
	subl	$26, %eax
	pushl	%eax
	pushl	$0
	pushl	$8
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %esi
	addl	$56, %esp
	subl	$24, %esi
	pushl	%esi
	pushl	$59
	pushl	%esi
	pushl	$3
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	subl	$4, %eax
	pushl	%eax
	movl	%eax, -16(%ebp)
	pushl	$2
	pushl	%esi
	pushl	$2
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	-16(%ebp)
	pushl	$59
	pushl	-16(%ebp)
	pushl	$3
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	subl	$5, %eax
	pushl	%eax
	movl	16(%ebp), %eax
	pushl	$59
	subl	$23, %eax
	pushl	%eax
	movl	%eax, -20(%ebp)
	pushl	$59
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$3, %eax
	movl	%eax, -24(%ebp)
	pushl	%eax
	pushl	$59
	pushl	%eax
	pushl	$2
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	-24(%ebp)
	pushl	$60
	pushl	%esi
	pushl	$60
	pushl	$0
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %edi
	addl	$56, %esp
	movl	12(%ebp), %ebx
	subl	$4, %ebx
	subl	$47, %edi
	pushl	%esi
	pushl	%ebx
	pushl	%esi
	pushl	%edi
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	-16(%ebp)
	pushl	%edi
	pushl	-20(%ebp)
	pushl	%edi
	pushl	$15
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	-24(%ebp)
	pushl	%edi
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	movl	12(%ebp), %eax
	pushl	-24(%ebp)
	subl	$3, %eax
	pushl	%eax
	pushl	%esi
	pushl	%eax
	pushl	$7
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putfont8
	.def	_putfont8;	.scl	2;	.type	32;	.endef
_putfont8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	movl	28(%ebp), %edi
	movb	24(%ebp), %bl
L61:
	movl	20(%ebp), %eax
	movl	16(%ebp), %edx
	addl	%esi, %eax
	imull	12(%ebp), %eax
	addl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movb	(%esi,%edi), %dl
	testb	%dl, %dl
	jns	L53
	movb	%bl, (%ecx)
L53:
	movb	%dl, %al
	andl	$64, %eax
	testb	%al, %al
	je	L54
	movb	%bl, 1(%ecx)
L54:
	movb	%dl, %al
	andl	$32, %eax
	testb	%al, %al
	je	L55
	movb	%bl, 2(%ecx)
L55:
	movb	%dl, %al
	andl	$16, %eax
	testb	%al, %al
	je	L56
	movb	%bl, 3(%ecx)
L56:
	movb	%dl, %al
	andl	$8, %eax
	testb	%al, %al
	je	L57
	movb	%bl, 4(%ecx)
L57:
	movb	%dl, %al
	andl	$4, %eax
	testb	%al, %al
	je	L58
	movb	%bl, 5(%ecx)
L58:
	movb	%dl, %al
	andl	$2, %eax
	testb	%al, %al
	je	L59
	movb	%bl, 6(%ecx)
L59:
	andl	$1, %edx
	testb	%dl, %dl
	je	L51
	movb	%bl, 7(%ecx)
L51:
	incl	%esi
	cmpl	$16, %esi
	jle	L61
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _putfonts8_asc
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
_putfonts8_asc:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ebx
	movl	28(%ebp), %ebx
	movb	24(%ebp), %al
	movb	%al, -13(%ebp)
	movl	16(%ebp), %esi
	movl	20(%ebp), %edi
	cmpb	$0, (%ebx)
	jne	L69
L71:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L69:
	movzbl	(%ebx), %eax
	sall	$4, %eax
	incl	%ebx
	addl	$_hankaku, %eax
	pushl	%eax
	movsbl	-13(%ebp),%eax
	pushl	%eax
	pushl	%edi
	pushl	%esi
	addl	$8, %esi
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfont8
	addl	$24, %esp
	cmpb	$0, (%ebx)
	jne	L69
	jmp	L71
	.data
_cursor.1:
	.ascii "**************.."
	.ascii "*OOOOOOOOOOO*..."
	.ascii "*OOOOOOOOOO*...."
	.ascii "*OOOOOOOOO*....."
	.ascii "*OOOOOOOO*......"
	.ascii "*OOOOOOO*......."
	.ascii "*OOOOOOO*......."
	.ascii "*OOOOOOOO*......"
	.ascii "*OOOO**OOO*....."
	.ascii "*OOO*..*OOO*...."
	.ascii "*OO*....*OOO*..."
	.ascii "*O*......*OOO*.."
	.ascii "**........*OOO*."
	.ascii "*..........*OOO*"
	.ascii "............*OO*"
	.ascii ".............***"
	.text
	.balign 2
.globl _init_mouse_cursor8
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
_init_mouse_cursor8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	xorl	%ebx, %ebx
	pushl	%edi
	xorl	%edi, %edi
	movb	12(%ebp), %al
	movl	8(%ebp), %esi
	movb	%al, -13(%ebp)
L85:
	xorl	%edx, %edx
L84:
	leal	(%edx,%edi), %eax
	cmpb	$42, _cursor.1(%eax)
	je	L90
L81:
	cmpb	$79, _cursor.1(%eax)
	je	L91
L82:
	cmpb	$46, _cursor.1(%eax)
	je	L92
L79:
	incl	%edx
	cmpl	$15, %edx
	jle	L84
	incl	%ebx
	addl	$16, %edi
	cmpl	$15, %ebx
	jle	L85
	popl	%esi
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L92:
	movb	-13(%ebp), %cl
	movb	%cl, (%eax,%esi)
	jmp	L79
L91:
	movb	$7, (%eax,%esi)
	jmp	L82
L90:
	movb	$0, (%eax,%esi)
	jmp	L81
	.balign 2
.globl _putblock8_8
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
_putblock8_8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%esi, %esi
	pushl	%ebx
	subl	$12, %esp
	cmpl	20(%ebp), %esi
	jge	L105
	xorl	%edi, %edi
L103:
	xorl	%ebx, %ebx
	cmpl	16(%ebp), %ebx
	jge	L107
	movl	32(%ebp), %eax
	addl	%edi, %eax
	movl	%eax, -20(%ebp)
L102:
	movl	28(%ebp), %eax
	movl	24(%ebp), %edx
	addl	%esi, %eax
	addl	%ebx, %edx
	imull	12(%ebp), %eax
	addl	%edx, %eax
	movl	8(%ebp), %ecx
	movl	-20(%ebp), %edx
	incl	%ebx
	movb	(%edx), %dl
	movb	%dl, (%eax,%ecx)
	incl	-20(%ebp)
	cmpl	16(%ebp), %ebx
	jl	L102
L107:
	incl	%esi
	addl	36(%ebp), %edi
	cmpl	20(%ebp), %esi
	jl	L103
L105:
	addl	$12, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
	.def	_set_palette;	.scl	2;	.type	32;	.endef
	.def	_io_hlt;	.scl	2;	.type	32;	.endef
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_putfont8;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_load_idtr;	.scl	2;	.type	32;	.endef
	.def	_set_gatedesc;	.scl	2;	.type	32;	.endef
	.def	_load_gdtr;	.scl	2;	.type	32;	.endef
	.def	_set_segmdesc;	.scl	2;	.type	32;	.endef
