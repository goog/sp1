	.file	"bootpack.c"
	.data
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	126
	.byte	61
	.byte	126
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	96
	.byte	123
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	43
	.byte	42
	.byte	0
	.byte	0
	.byte	125
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
LC0:
	.ascii "task a\0"
LC1:
	.ascii "console\0"
LC2:
	.ascii "%3d %3d\0"
LC3:
	.ascii "memory %dMB free %dkb\0"
LC6:
	.ascii "[lcr %4d %4d]\0"
LC7:
	.ascii "(%3d,%3d)\0"
LC4:
	.ascii "%02X\0"
LC5:
	.ascii " \0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-780(%ebp), %eax
	subl	$940, %esp
	leal	-268(%ebp), %ebx
	pushl	$0
	pushl	%eax
	leal	-860(%ebp), %eax
	pushl	$128
	pushl	%eax
	call	_fifo_init
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	call	_init_pit
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	addl	$32, %esp
	call	_timer_alloc
	leal	-860(%ebp), %edx
	pushl	$1
	pushl	%edx
	movl	%eax, -912(%ebp)
	pushl	$50
	pushl	%eax
	call	_timer_set
	leal	-860(%ebp), %eax
	pushl	$256
	pushl	%eax
	call	_init_keyboard
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	addl	$32, %esp
	pushl	$3932160
	movl	%eax, -888(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	movl	-888(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	call	_init_palette
	movswl	4086,%eax
	movswl	4084,%edx
	pushl	%eax
	movl	%eax, -884(%ebp)
	movswl	4084,%eax
	pushl	%eax
	movl	%edx, -880(%ebp)
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	addl	$44, %esp
	movl	%eax, %esi
	pushl	%eax
	call	_sheet_alloc
	pushl	%esi
	movl	%eax, -892(%ebp)
	call	_sheet_alloc
	pushl	%esi
	movl	%eax, -896(%ebp)
	call	_sheet_alloc
	movl	%eax, %edi
	movswl	4086,%edx
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$8320
	pushl	$3932160
	movl	%eax, -904(%ebp)
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, -908(%ebp)
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	pushl	-892(%ebp)
	call	_sheet_setbuf
	addl	$48, %esp
	pushl	$99
	pushl	$16
	pushl	$16
	pushl	%ebx
	pushl	-896(%ebp)
	call	_sheet_setbuf
	pushl	$-1
	pushl	$52
	pushl	$144
	pushl	-908(%ebp)
	pushl	%edi
	call	_sheet_setbuf
	addl	$40, %esp
	pushl	-884(%ebp)
	pushl	-880(%ebp)
	pushl	-904(%ebp)
	call	_init_screen
	leal	-860(%ebp), %edx
	leal	-876(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%edx
	call	_enable_mouse
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	addl	$32, %esp
	pushl	$1
	pushl	$LC0
	pushl	$52
	pushl	$144
	pushl	-908(%ebp)
	call	_make_window8
	pushl	$7
	pushl	$16
	pushl	$128
	pushl	$28
	pushl	$8
	pushl	%edi
	call	_make_textbox8
	addl	$44, %esp
	movswl	4084,%eax
	movl	$8, -924(%ebp)
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -916(%ebp)
	movswl	4086,%eax
	pushl	$3932160
	leal	-44(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -920(%ebp)
	leal	-828(%ebp), %ebx
	call	_task_init
	pushl	$0
	pushl	$1
	pushl	%eax
	movl	%eax, -932(%ebp)
	movl	%eax, -836(%ebp)
	call	_taskrun
	pushl	%esi
	call	_sheet_alloc
	pushl	$42240
	pushl	$3932160
	movl	%eax, -900(%ebp)
	call	_memman_alloc_4k
	pushl	$-1
	pushl	$165
	movl	%eax, -940(%ebp)
	pushl	$256
	pushl	%eax
	pushl	-900(%ebp)
	call	_sheet_setbuf
	addl	$48, %esp
	pushl	$0
	pushl	$LC1
	pushl	$165
	pushl	$256
	pushl	-940(%ebp)
	call	_make_shell
	call	_task_alloc
	pushl	$65536
	pushl	$3932160
	movl	%eax, -936(%ebp)
	call	_memman_alloc_4k
	movl	-936(%ebp), %edx
	addl	$65528, %eax
	movl	%eax, 72(%edx)
	movl	$_task_console, 48(%edx)
	movl	$8, 88(%edx)
	movl	$16, 92(%edx)
	movl	$8, 96(%edx)
	movl	$8, 100(%edx)
	movl	$8, 104(%edx)
	movl	$8, 108(%edx)
	movl	-900(%ebp), %edx
	movl	%edx, 4(%eax)
	pushl	$2
	pushl	$2
	pushl	-936(%ebp)
	call	_taskrun
	addl	$40, %esp
	pushl	$0
	pushl	$0
	pushl	-892(%ebp)
	call	_sheet_move
	pushl	-920(%ebp)
	pushl	-916(%ebp)
	pushl	-896(%ebp)
	call	_sheet_move
	pushl	$56
	pushl	$8
	pushl	%edi
	call	_sheet_move
	addl	$36, %esp
	pushl	$200
	pushl	$100
	pushl	-900(%ebp)
	call	_sheet_move
	pushl	$0
	pushl	-892(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-900(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	%edi
	call	_sheet_updown
	addl	$36, %esp
	pushl	$3
	pushl	-896(%ebp)
	call	_sheet_updown
	pushl	-920(%ebp)
	pushl	-916(%ebp)
	pushl	$LC2
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$48, %esp
	pushl	$3932160
	call	_memman_total
	shrl	$20, -888(%ebp)
	shrl	$10, %eax
	movl	%eax, (%esp)
	pushl	-888(%ebp)
	pushl	$LC3
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$7
	pushl	$32
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	call	_putfonts8_asc
	addl	$40, %esp
	pushl	$48
	movswl	4084,%eax
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	-892(%ebp)
	call	_sheet_refresh
	movl	$0, -944(%ebp)
	movl	$0, -948(%ebp)
	movb	4081, %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -952(%ebp)
L48:
	addl	$20, %esp
L2:
	leal	-860(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo_status
	popl	%esi
	testl	%eax, %eax
	je	L52
	pushl	%ebx
	call	_fifo_get
	movl	%eax, %esi
	call	_io_sti
	popl	%ecx
	leal	-256(%esi), %eax
	cmpl	$255, %eax
	jbe	L53
	leal	-512(%esi), %eax
	cmpl	$255, %eax
	jbe	L54
	cmpl	$1, %esi
	je	L55
	testl	%esi, %esi
	jne	L2
	pushl	$1
	pushl	%ebx
	pushl	$50
	pushl	-912(%ebp)
	call	_timer_set
	movl	-924(%ebp), %eax
	pushl	$43
	addl	$7, %eax
	pushl	%eax
	pushl	$28
	pushl	-924(%ebp)
	pushl	$7
L49:
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	movl	-924(%ebp), %eax
	addl	$44, %esp
	addl	$8, %eax
	pushl	$44
	pushl	%eax
	pushl	$28
	pushl	-924(%ebp)
	pushl	%edi
	call	_sheet_refresh
	jmp	L48
L55:
	pushl	$0
	pushl	%ebx
	pushl	$50
	pushl	-912(%ebp)
	call	_timer_set
	movl	-924(%ebp), %eax
	pushl	$43
	addl	$7, %eax
	pushl	%eax
	pushl	$28
	pushl	-924(%ebp)
	pushl	$0
	jmp	L49
L54:
	movl	%esi, %edx
	movzbl	%dl, %eax
	pushl	%eax
	leal	-876(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	je	L2
	pushl	-868(%ebp)
	pushl	-872(%ebp)
	pushl	$LC6
	leal	-828(%ebp), %ebx
	pushl	%ebx
	call	_sprintf
	addl	$16, %esp
	movl	-864(%ebp), %eax
	testl	$1, %eax
	je	L36
	movb	$76, -827(%ebp)
L36:
	testl	$2, %eax
	je	L37
	movb	$82, -825(%ebp)
L37:
	andl	$4, %eax
	je	L38
	movb	$67, -826(%ebp)
L38:
	pushl	$31
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	call	_boxfill8
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	call	_putfonts8_asc
	addl	$52, %esp
	pushl	$32
	pushl	$152
	pushl	$16
	pushl	$32
	pushl	-892(%ebp)
	call	_sheet_refresh
	movl	-872(%ebp), %edx
	movl	-868(%ebp), %eax
	addl	$20, %esp
	addl	%eax, -920(%ebp)
	addl	%edx, -916(%ebp)
	js	L56
L39:
	cmpl	$0, -920(%ebp)
	js	L57
L40:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -916(%ebp)
	jle	L41
	movl	%eax, -916(%ebp)
L41:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -920(%ebp)
	jle	L42
	movl	%eax, -920(%ebp)
L42:
	pushl	-920(%ebp)
	pushl	-916(%ebp)
	pushl	$LC7
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	$79
	pushl	$0
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	call	_putfonts8_asc
	pushl	$16
	pushl	$80
	pushl	$0
	pushl	$0
	pushl	-892(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	pushl	-920(%ebp)
	pushl	-916(%ebp)
	pushl	-896(%ebp)
	call	_sheet_move
	addl	$12, %esp
	testl	$1, -864(%ebp)
	je	L2
	movl	-920(%ebp), %eax
	subl	$8, %eax
	pushl	%eax
	movl	-916(%ebp), %eax
	subl	$80, %eax
	pushl	%eax
	pushl	%edi
	call	_sheet_move
	addl	$12, %esp
	jmp	L2
L57:
	movl	$0, -920(%ebp)
	jmp	L40
L56:
	movl	$0, -916(%ebp)
	jmp	L39
L53:
	pushl	%eax
	leal	-828(%ebp), %ebx
	pushl	$LC4
	pushl	%ebx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$10
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	call	_boxfill8
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-904(%ebp)
	call	_putfonts8_asc
	pushl	$32
	pushl	$16
	pushl	$16
	pushl	$0
	pushl	-892(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	cmpl	$383, %esi
	jg	L8
	cmpl	$0, -948(%ebp)
	jne	L9
	movb	_keytable0.0-256(%esi), %al
L50:
	movb	%al, -828(%ebp)
L11:
	movb	-828(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L12
	movl	-952(%ebp), %eax
	andl	$4, %eax
	jne	L15
	cmpl	$0, -948(%ebp)
	je	L14
L15:
	decl	%eax
	je	L58
L12:
	movb	-828(%ebp), %al
	testb	%al, %al
	je	L16
	cmpl	$0, -944(%ebp)
	jne	L17
	cmpl	$127, -924(%ebp)
	jg	L16
	pushl	$1
	leal	-828(%ebp), %eax
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	$28
	pushl	-924(%ebp)
	pushl	%edi
	movb	$0, -827(%ebp)
	call	_bps
	addl	$28, %esp
	addl	$8, -924(%ebp)
L16:
	cmpl	$270, %esi
	je	L59
L20:
	cmpl	$271, %esi
	je	L60
L23:
	cmpl	$298, %esi
	je	L61
L26:
	cmpl	$310, %esi
	je	L62
L27:
	cmpl	$426, %esi
	je	L63
L28:
	cmpl	$438, %esi
	je	L64
L29:
	cmpl	$314, %esi
	je	L65
L30:
	cmpl	$325, %esi
	je	L66
L31:
	cmpl	$326, %esi
	je	L67
L32:
	movl	-924(%ebp), %eax
	pushl	$43
	addl	$7, %eax
	pushl	%eax
	pushl	$28
	pushl	-924(%ebp)
	pushl	$7
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	movl	-924(%ebp), %eax
	pushl	$44
	addl	$8, %eax
	pushl	%eax
	pushl	$28
	pushl	-924(%ebp)
	pushl	%edi
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L2
L67:
	xorl	$1, -952(%ebp)
	jmp	L32
L66:
	xorl	$2, -952(%ebp)
	jmp	L31
L65:
	xorl	$4, -952(%ebp)
	jmp	L30
L64:
	andl	$-3, -948(%ebp)
	jmp	L29
L63:
	andl	$-2, -948(%ebp)
	jmp	L28
L62:
	orl	$2, -948(%ebp)
	jmp	L27
L61:
	orl	$1, -948(%ebp)
	jmp	L26
L60:
	cmpl	$0, -944(%ebp)
	jne	L24
	pushl	$0
	pushl	$LC0
	pushl	4(%edi)
	pushl	-908(%ebp)
	movl	$1, -944(%ebp)
	call	_make_wtitle8
	movl	-900(%ebp), %eax
	pushl	$1
	pushl	$LC1
	pushl	4(%eax)
L51:
	pushl	-940(%ebp)
	call	_shell_title
	addl	$32, %esp
	pushl	$21
	pushl	4(%edi)
	pushl	$0
	pushl	$0
	pushl	%edi
	call	_sheet_refresh
	movl	-900(%ebp), %eax
	pushl	$21
	pushl	4(%eax)
	pushl	$0
	pushl	$0
	pushl	%eax
	call	_sheet_refresh
	addl	$40, %esp
	jmp	L23
L24:
	pushl	$1
	pushl	$LC0
	pushl	4(%edi)
	pushl	-908(%ebp)
	movl	$0, -944(%ebp)
	call	_make_wtitle8
	movl	-900(%ebp), %edx
	pushl	$0
	pushl	$LC1
	pushl	4(%edx)
	jmp	L51
L59:
	cmpl	$8, -924(%ebp)
	jle	L20
	cmpl	$0, -944(%ebp)
	jne	L21
	pushl	$1
	pushl	$LC5
	pushl	$0
	pushl	$7
	pushl	$28
	pushl	-924(%ebp)
	pushl	%edi
	call	_bps
	addl	$28, %esp
	subl	$8, -924(%ebp)
	jmp	L20
L21:
	movl	-936(%ebp), %eax
	pushl	$264
	addl	$120, %eax
	pushl	%eax
	call	_fifo_put
	popl	%ebx
	popl	%eax
	jmp	L20
L17:
	movsbl	%al,%eax
	addl	$256, %eax
	pushl	%eax
	movl	-936(%ebp), %eax
	addl	$120, %eax
	pushl	%eax
	call	_fifo_put
	popl	%eax
	popl	%edx
	jmp	L16
L58:
	cmpl	$0, -948(%ebp)
	je	L12
L14:
	leal	32(%edx), %eax
	movb	%al, -828(%ebp)
	jmp	L12
L9:
	movb	_keytable1.1-256(%esi), %al
	jmp	L50
L8:
	movb	$0, -828(%ebp)
	jmp	L11
L52:
	pushl	-932(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%ebx
	jmp	L2
	.data
LC8:
	.ascii ">\0"
	.text
	.balign 2
.globl _task_console
	.def	_task_console;	.scl	2;	.type	32;	.endef
_task_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$8, %edi
	pushl	%ebx
	subl	$540, %esp
	movl	$0, -548(%ebp)
	call	_task_now
	movl	%eax, -552(%ebp)
	call	_timer_alloc
	movl	-552(%ebp), %ebx
	pushl	$1
	addl	$120, %ebx
	movl	%eax, -544(%ebp)
	pushl	%ebx
	pushl	$50
	pushl	%eax
	call	_timer_set
	leal	-524(%ebp), %eax
	pushl	-552(%ebp)
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo_init
	addl	$32, %esp
	pushl	$1
	pushl	$LC8
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	$8
	pushl	8(%ebp)
	call	_bps
	addl	$28, %esp
L69:
	call	_io_cli
	movl	-552(%ebp), %ebx
	addl	$120, %ebx
	pushl	%ebx
	call	_fifo_status
	popl	%edx
	testl	%eax, %eax
	je	L84
	pushl	%ebx
	call	_fifo_get
	movl	%eax, %esi
	call	_io_sti
	popl	%eax
	cmpl	$1, %esi
	jle	L85
L74:
	leal	-256(%esi), %eax
	cmpl	$255, %eax
	ja	L77
	cmpl	$264, %esi
	je	L86
	cmpl	$239, %edi
	jg	L77
	movl	%esi, %eax
	pushl	$1
	movb	%al, -540(%ebp)
	leal	-540(%ebp), %eax
	pushl	%eax
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	%edi
	addl	$8, %edi
	pushl	8(%ebp)
	movb	$0, -539(%ebp)
	call	_bps
L83:
	addl	$28, %esp
L77:
	pushl	$43
	leal	7(%edi), %eax
	pushl	%eax
	movl	8(%ebp), %eax
	pushl	$28
	pushl	%edi
	pushl	-548(%ebp)
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	leal	8(%edi), %eax
	pushl	$44
	pushl	%eax
	pushl	$28
	pushl	%edi
	pushl	8(%ebp)
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L69
L86:
	cmpl	$16, %edi
	jle	L77
	pushl	$1
	pushl	$LC5
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	%edi
	subl	$8, %edi
	pushl	8(%ebp)
	call	_bps
	jmp	L83
L85:
	cmpl	$1, %esi
	je	L87
	pushl	$1
	pushl	%ebx
	pushl	$50
	pushl	-544(%ebp)
	call	_timer_set
	movl	$0, -548(%ebp)
L82:
	addl	$16, %esp
	jmp	L74
L87:
	pushl	$0
	pushl	%ebx
	pushl	$50
	pushl	-544(%ebp)
	call	_timer_set
	movl	$7, -548(%ebp)
	jmp	L82
L84:
	pushl	-552(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%eax
	jmp	L69
	.def	_task_now;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_shell_title;	.scl	2;	.type	32;	.endef
	.def	_make_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_fifo_put;	.scl	2;	.type	32;	.endef
	.def	_bps;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_fifo_get;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_fifo_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_move;	.scl	2;	.type	32;	.endef
	.def	_task_console;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_make_shell;	.scl	2;	.type	32;	.endef
	.def	_taskrun;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_timer_set;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
	.def	_fifo_init;	.scl	2;	.type	32;	.endef
