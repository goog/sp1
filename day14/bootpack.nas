[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo_init
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_io_sti
	EXTERN	_init_pit
	EXTERN	_io_out8
	EXTERN	_timer_alloc
	EXTERN	_timer_set
	EXTERN	_init_keyboard
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_init_screen
	EXTERN	_enable_mouse
	EXTERN	_init_mouse_cursor8
	EXTERN	_make_window8
	EXTERN	_sheet_move
	EXTERN	_sheet_updown
	EXTERN	_sprintf
	EXTERN	_putfonts8_asc
	EXTERN	_memman_total
	EXTERN	_sheet_refresh
	EXTERN	_make_textbox8
	EXTERN	_io_cli
	EXTERN	_fifo_status
	EXTERN	_fifo_get
	EXTERN	_boxfill8
	EXTERN	_mouse_decode
	EXTERN	_keytable.0
	EXTERN	_bps
	EXTERN	_io_stihlt
[FILE "bootpack.c"]
[SECTION .data]
_keytable.0:
	DB	0
	DB	0
	DB	49
	DB	50
	DB	51
	DB	52
	DB	53
	DB	54
	DB	55
	DB	56
	DB	57
	DB	48
	DB	45
	DB	94
	DB	0
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	64
	DB	91
	DB	0
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	59
	DB	58
	DB	0
	DB	0
	DB	93
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	44
	DB	46
	DB	47
	DB	0
	DB	42
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	55
	DB	56
	DB	57
	DB	45
	DB	52
	DB	53
	DB	54
	DB	43
	DB	49
	DB	50
	DB	51
	DB	48
	DB	46
LC0:
	DB	"window",0x00
LC1:
	DB	"%3d %3d",0x00
LC2:
	DB	"memory %dMB free %dkb",0x00
LC8:
	DB	"3s",0x00
LC7:
	DB	"10",0x00
LC5:
	DB	"[lcr %4d %4d]",0x00
LC6:
	DB	"(%3d,%3d)",0x00
LC3:
	DB	"%02X",0x00
LC4:
	DB	" ",0x00
[SECTION .text]
	ALIGN	2
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EAX,DWORD [-780+EBP]
	SUB	ESP,912
	PUSH	EAX
	LEA	EAX,DWORD [-860+EBP]
	PUSH	128
	PUSH	EAX
	CALL	_fifo_init
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	CALL	_init_pit
	PUSH	248
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	CALL	_timer_alloc
	MOV	EBX,EAX
	CALL	_timer_alloc
	MOV	ESI,EAX
	CALL	_timer_alloc
	LEA	EDX,DWORD [-860+EBP]
	PUSH	10
	PUSH	EDX
	MOV	DWORD [-904+EBP],EAX
	PUSH	1000
	PUSH	EBX
	LEA	EBX,DWORD [-860+EBP]
	CALL	_timer_set
	ADD	ESP,44
	PUSH	3
	PUSH	EBX
	PUSH	300
	PUSH	ESI
	CALL	_timer_set
	PUSH	1
	PUSH	EBX
	PUSH	50
	PUSH	DWORD [-904+EBP]
	CALL	_timer_set
	ADD	ESP,32
	PUSH	256
	PUSH	EBX
	CALL	_init_keyboard
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	PUSH	3932160
	MOV	DWORD [-888+EBP],EAX
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	3932160
	CALL	_memman_free
	MOV	EAX,DWORD [-888+EBP]
	ADD	ESP,32
	SUB	EAX,4194304
	PUSH	EAX
	PUSH	4194304
	PUSH	3932160
	CALL	_memman_free
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	MOVSX	EBX,WORD [4084]
	PUSH	EAX
	MOV	DWORD [-884+EBP],EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	MOV	DWORD [-880+EBP],EBX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	MOV	EBX,EAX
	PUSH	EAX
	CALL	_sheet_alloc
	ADD	ESP,32
	PUSH	EBX
	MOV	DWORD [-892+EBP],EAX
	CALL	_sheet_alloc
	PUSH	EBX
	LEA	EBX,DWORD [-268+EBP]
	MOV	DWORD [-896+EBP],EAX
	CALL	_sheet_alloc
	MOV	EDI,EAX
	MOVSX	EDX,WORD [4086]
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EDX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	8320
	PUSH	3932160
	MOV	DWORD [-900+EBP],EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	ESI,EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,44
	PUSH	99
	PUSH	16
	PUSH	16
	PUSH	EBX
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_setbuf
	PUSH	-1
	PUSH	52
	PUSH	160
	PUSH	ESI
	PUSH	EDI
	CALL	_sheet_setbuf
	ADD	ESP,40
	PUSH	DWORD [-884+EBP]
	PUSH	DWORD [-880+EBP]
	PUSH	DWORD [-900+EBP]
	CALL	_init_screen
	LEA	EAX,DWORD [-876+EBP]
	PUSH	EAX
	LEA	EAX,DWORD [-860+EBP]
	PUSH	512
	PUSH	EAX
	CALL	_enable_mouse
	PUSH	99
	PUSH	EBX
	MOV	EBX,2
	CALL	_init_mouse_cursor8
	ADD	ESP,32
	PUSH	LC0
	PUSH	52
	PUSH	160
	PUSH	ESI
	CALL	_make_window8
	MOVSX	EAX,WORD [4084]
	LEA	ECX,DWORD [-16+EAX]
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	MOV	DWORD [-912+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	0
	LEA	ECX,DWORD [-44+EAX]
	PUSH	0
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	PUSH	DWORD [-892+EBP]
	MOV	DWORD [-916+EBP],EAX
	LEA	EBX,DWORD [-828+EBP]
	CALL	_sheet_move
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_move
	ADD	ESP,40
	PUSH	72
	PUSH	80
	PUSH	EDI
	CALL	_sheet_move
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_updown
	PUSH	1
	PUSH	EDI
	CALL	_sheet_updown
	PUSH	2
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_updown
	ADD	ESP,36
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	LC1
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	7
	PUSH	0
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	ADD	ESP,40
	PUSH	3932160
	CALL	_memman_total
	SHR	DWORD [-888+EBP],20
	SHR	EAX,10
	MOV	DWORD [ESP],EAX
	PUSH	DWORD [-888+EBP]
	PUSH	LC2
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	7
	PUSH	32
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_putfonts8_asc
	ADD	ESP,40
	PUSH	48
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	PUSH	7
	PUSH	16
	PUSH	144
	PUSH	28
	PUSH	8
	PUSH	EDI
	CALL	_make_textbox8
	MOV	DWORD [-924+EBP],8
L31:
	ADD	ESP,44
L2:
	LEA	ESI,DWORD [-860+EBP]
	CALL	_io_cli
	PUSH	ESI
	CALL	_fifo_status
	POP	ECX
	TEST	EAX,EAX
	JE	L33
	PUSH	ESI
	CALL	_fifo_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EDX
	LEA	EAX,DWORD [-256+EBX]
	CMP	EAX,255
	JBE	L34
	LEA	EAX,DWORD [-512+EBX]
	CMP	EAX,255
	JBE	L35
	CMP	EBX,10
	JE	L36
	CMP	EBX,3
	JE	L37
	CMP	EBX,1
	JE	L38
	TEST	EBX,EBX
	JNE	L2
	PUSH	1
	PUSH	ESI
	PUSH	50
	PUSH	DWORD [-904+EBP]
	CALL	_timer_set
	MOV	EAX,DWORD [-924+EBP]
	PUSH	43
	ADD	EAX,7
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-924+EBP]
	PUSH	7
L30:
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	MOV	EAX,DWORD [-924+EBP]
	ADD	ESP,44
	ADD	EAX,8
	PUSH	44
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-924+EBP]
	PUSH	EDI
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L2
L38:
	PUSH	0
	PUSH	ESI
	PUSH	50
	PUSH	DWORD [-904+EBP]
	CALL	_timer_set
	MOV	EAX,DWORD [-924+EBP]
	PUSH	43
	ADD	EAX,7
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-924+EBP]
	PUSH	0
	JMP	L30
L37:
	PUSH	LC8
	PUSH	7
	PUSH	80
L32:
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_putfonts8_asc
	PUSH	100
	PUSH	100
	PUSH	0
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	JMP	L31
L36:
	PUSH	LC7
	PUSH	7
	PUSH	64
	JMP	L32
L35:
	MOVZX	EAX,BL
	PUSH	EAX
	LEA	EAX,DWORD [-876+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L2
	PUSH	DWORD [-868+EBP]
	PUSH	DWORD [-872+EBP]
	PUSH	LC5
	LEA	EBX,DWORD [-828+EBP]
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,16
	MOV	EAX,DWORD [-864+EBP]
	TEST	EAX,1
	JE	L14
	MOV	BYTE [-827+EBP],76
L14:
	TEST	EAX,2
	JE	L15
	MOV	BYTE [-825+EBP],82
L15:
	AND	EAX,4
	JE	L16
	MOV	BYTE [-826+EBP],67
L16:
	PUSH	31
	PUSH	151
	PUSH	16
	PUSH	32
	PUSH	14
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_boxfill8
	PUSH	EBX
	PUSH	7
	PUSH	16
	PUSH	32
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_putfonts8_asc
	ADD	ESP,52
	PUSH	32
	PUSH	152
	PUSH	16
	PUSH	32
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	MOV	EDX,DWORD [-872+EBP]
	MOV	EAX,DWORD [-868+EBP]
	ADD	ESP,20
	ADD	DWORD [-916+EBP],EAX
	ADD	DWORD [-912+EBP],EDX
	JS	L39
L17:
	CMP	DWORD [-916+EBP],0
	JS	L40
L18:
	MOVSX	EAX,WORD [4084]
	DEC	EAX
	CMP	DWORD [-912+EBP],EAX
	JLE	L19
	MOV	DWORD [-912+EBP],EAX
L19:
	MOVSX	EAX,WORD [4086]
	DEC	EAX
	CMP	DWORD [-916+EBP],EAX
	JLE	L20
	MOV	DWORD [-916+EBP],EAX
L20:
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	LC6
	PUSH	EBX
	CALL	_sprintf
	PUSH	15
	PUSH	79
	PUSH	0
	PUSH	0
	PUSH	14
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_boxfill8
	ADD	ESP,44
	PUSH	EBX
	PUSH	7
	PUSH	0
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_putfonts8_asc
	PUSH	16
	PUSH	80
	PUSH	0
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	ADD	ESP,44
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_move
	ADD	ESP,12
	TEST	DWORD [-864+EBP],1
	JE	L2
	MOV	EAX,DWORD [-916+EBP]
	SUB	EAX,8
	PUSH	EAX
	MOV	EAX,DWORD [-912+EBP]
	SUB	EAX,80
	PUSH	EAX
	PUSH	EDI
	CALL	_sheet_move
	ADD	ESP,12
	JMP	L2
L40:
	MOV	DWORD [-916+EBP],0
	JMP	L18
L39:
	MOV	DWORD [-912+EBP],0
	JMP	L17
L34:
	PUSH	EAX
	LEA	ESI,DWORD [-828+EBP]
	PUSH	LC3
	PUSH	ESI
	CALL	_sprintf
	PUSH	31
	PUSH	15
	PUSH	16
	PUSH	0
	PUSH	10
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_boxfill8
	ADD	ESP,40
	PUSH	ESI
	PUSH	7
	PUSH	16
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-900+EBP]
	CALL	_putfonts8_asc
	PUSH	32
	PUSH	16
	PUSH	16
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	ADD	ESP,44
	CMP	EBX,339
	JG	L8
	MOV	AL,BYTE [_keytable.0-256+EBX]
	TEST	AL,AL
	JE	L8
	CMP	DWORD [-924+EBP],143
	JG	L8
	PUSH	1
	MOV	BYTE [-828+EBP],AL
	PUSH	ESI
	PUSH	0
	PUSH	7
	PUSH	28
	PUSH	DWORD [-924+EBP]
	PUSH	EDI
	MOV	BYTE [-827+EBP],0
	CALL	_bps
	ADD	ESP,28
	ADD	DWORD [-924+EBP],8
L8:
	CMP	EBX,270
	JE	L41
L10:
	MOV	EAX,DWORD [-924+EBP]
	PUSH	43
	ADD	EAX,7
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-924+EBP]
	PUSH	7
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	MOV	EAX,DWORD [-924+EBP]
	PUSH	44
	ADD	EAX,8
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-924+EBP]
	PUSH	EDI
	CALL	_sheet_refresh
	ADD	ESP,48
	JMP	L2
L41:
	CMP	DWORD [-924+EBP],8
	JLE	L10
	PUSH	1
	PUSH	LC4
	PUSH	0
	PUSH	7
	PUSH	28
	PUSH	DWORD [-924+EBP]
	PUSH	EDI
	CALL	_bps
	ADD	ESP,28
	SUB	DWORD [-924+EBP],8
	JMP	L10
L33:
	CALL	_io_stihlt
	JMP	L2
