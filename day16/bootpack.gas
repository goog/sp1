	.file	"bootpack.c"
	.data
_keytable.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
LC0:
	.ascii "task a\0"
LC1:
	.ascii "task_b%d\0"
LC2:
	.ascii "%3d %3d\0"
LC3:
	.ascii "memory %dMB free %dkb\0"
LC6:
	.ascii "[lcr %4d %4d]\0"
LC7:
	.ascii "(%3d,%3d)\0"
LC4:
	.ascii "%02X\0"
LC5:
	.ascii " \0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-796(%ebp), %eax
	subl	$960, %esp
	leal	-876(%ebp), %esi
	pushl	$0
	pushl	%eax
	pushl	$128
	pushl	%esi
	call	_fifo_init
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	call	_init_pit
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	addl	$32, %esp
	call	_timer_alloc
	pushl	$1
	pushl	%esi
	movl	%eax, -944(%ebp)
	pushl	$50
	pushl	%eax
	call	_timer_set
	pushl	$256
	pushl	%esi
	call	_init_keyboard
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	addl	$32, %esp
	pushl	$3932160
	movl	%eax, -920(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	movl	-920(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	call	_init_palette
	movswl	4086,%edx
	movswl	4084,%eax
	pushl	%edx
	movl	%eax, -912(%ebp)
	movswl	4084,%eax
	pushl	%eax
	movl	%edx, -916(%ebp)
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	addl	$44, %esp
	pushl	%eax
	movl	%eax, -924(%ebp)
	call	_sheet_alloc
	pushl	-924(%ebp)
	movl	%eax, -928(%ebp)
	call	_sheet_alloc
	pushl	-924(%ebp)
	movl	%eax, -932(%ebp)
	call	_sheet_alloc
	movswl	4086,%ebx
	movl	%eax, -936(%ebp)
	movswl	4084,%eax
	imull	%ebx, %eax
	pushl	%eax
	leal	-284(%ebp), %ebx
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$8320
	pushl	$3932160
	movl	%eax, -940(%ebp)
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %edi
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	pushl	-928(%ebp)
	call	_sheet_setbuf
	addl	$48, %esp
	pushl	$99
	pushl	$16
	pushl	$16
	pushl	%ebx
	pushl	-932(%ebp)
	call	_sheet_setbuf
	pushl	$-1
	pushl	$52
	pushl	$144
	pushl	%edi
	pushl	-936(%ebp)
	call	_sheet_setbuf
	addl	$40, %esp
	pushl	-916(%ebp)
	pushl	-912(%ebp)
	pushl	-940(%ebp)
	call	_init_screen
	leal	-892(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%esi
	xorl	%esi, %esi
	call	_enable_mouse
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	addl	$32, %esp
	pushl	$1
	pushl	$LC0
	pushl	$52
	pushl	$144
	pushl	%edi
	movl	$8, %edi
	call	_make_window8
	pushl	$7
	pushl	$16
	pushl	$128
	pushl	$28
	pushl	$8
	pushl	-936(%ebp)
	call	_make_textbox8
	addl	$44, %esp
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -960(%ebp)
	movl	%eax, -952(%ebp)
	movswl	4086,%eax
	pushl	$3932160
	leal	-44(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -964(%ebp)
	movl	%eax, -956(%ebp)
	call	_task_init
	pushl	$0
	pushl	$1
	pushl	%eax
	movl	%eax, -972(%ebp)
	movl	%eax, -852(%ebp)
	call	_taskrun
	addl	$16, %esp
L6:
	pushl	-924(%ebp)
	call	_sheet_alloc
	pushl	$7488
	pushl	$3932160
	movl	%eax, -28(%ebp,%esi,4)
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %ebx
	pushl	$52
	pushl	$144
	pushl	%eax
	pushl	-28(%ebp,%esi,4)
	call	_sheet_setbuf
	leal	-844(%ebp), %eax
	addl	$32, %esp
	pushl	%esi
	pushl	$LC1
	pushl	%eax
	call	_sprintf
	leal	-844(%ebp), %edx
	pushl	$0
	pushl	%edx
	pushl	$52
	pushl	$144
	pushl	%ebx
	call	_make_window8
	addl	$32, %esp
	call	_task_alloc
	pushl	$65536
	movl	%eax, %ebx
	pushl	$3932160
	movl	%eax, -908(%ebp,%esi,4)
	call	_memman_alloc_4k
	addl	$65528, %eax
	movl	%eax, 72(%ebx)
	movl	-28(%ebp,%esi,4), %ebx
	movl	-908(%ebp,%esi,4), %eax
	movl	72(%eax), %ecx
	movl	$_task_b_main, 48(%eax)
	movl	$8, 88(%eax)
	movl	$16, 92(%eax)
	movl	$8, 96(%eax)
	movl	$8, 100(%eax)
	movl	$8, 104(%eax)
	movl	$8, 108(%eax)
	movl	%ebx, 4(%ecx)
	leal	1(%esi), %ebx
	pushl	%ebx
	movl	%ebx, %esi
	pushl	$2
	pushl	%eax
	call	_taskrun
	addl	$20, %esp
	cmpl	$2, %ebx
	jle	L6
	pushl	$0
	leal	-844(%ebp), %ebx
	pushl	$0
	pushl	-928(%ebp)
	call	_sheet_move
	pushl	-964(%ebp)
	pushl	-960(%ebp)
	pushl	-932(%ebp)
	call	_sheet_move
	pushl	$56
	pushl	$8
	pushl	-936(%ebp)
	call	_sheet_move
	addl	$36, %esp
	pushl	$56
	pushl	$168
	pushl	-28(%ebp)
	call	_sheet_move
	pushl	$116
	pushl	$8
	pushl	-24(%ebp)
	call	_sheet_move
	pushl	$116
	pushl	$168
	pushl	-20(%ebp)
	call	_sheet_move
	addl	$36, %esp
	pushl	$0
	pushl	-928(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-28(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-24(%ebp)
	call	_sheet_updown
	pushl	$3
	pushl	-20(%ebp)
	call	_sheet_updown
	addl	$32, %esp
	pushl	$4
	pushl	-936(%ebp)
	call	_sheet_updown
	pushl	$5
	pushl	-932(%ebp)
	call	_sheet_updown
	leal	-844(%ebp), %eax
	pushl	-964(%ebp)
	pushl	-960(%ebp)
	pushl	$LC2
	pushl	%eax
	call	_sprintf
	leal	-844(%ebp), %edx
	addl	$32, %esp
	pushl	%edx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	pushl	$3932160
	call	_memman_total
	shrl	$20, -920(%ebp)
	shrl	$10, %eax
	movl	%eax, (%esp)
	pushl	-920(%ebp)
	pushl	$LC3
	pushl	%ebx
	call	_sprintf
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$32
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	call	_putfonts8_asc
	pushl	$48
	movswl	4084,%eax
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	-928(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
L7:
	leal	-876(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo_status
	popl	%esi
	testl	%eax, %eax
	je	L34
	pushl	%ebx
	call	_fifo_get
	movl	%eax, %esi
	call	_io_sti
	popl	%edx
	leal	-256(%esi), %eax
	cmpl	$255, %eax
	jbe	L35
	leal	-512(%esi), %eax
	cmpl	$255, %eax
	jbe	L36
	cmpl	$1, %esi
	je	L37
	testl	%esi, %esi
	jne	L7
	pushl	$1
	pushl	%ebx
	pushl	$50
	pushl	-944(%ebp)
	call	_timer_set
	leal	7(%edi), %eax
	pushl	$43
	pushl	%eax
	movl	-936(%ebp), %eax
	pushl	$28
	pushl	%edi
	pushl	$7
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	leal	8(%edi), %eax
	addl	$44, %esp
	pushl	$44
	pushl	%eax
	pushl	$28
	pushl	%edi
	pushl	-936(%ebp)
L33:
	call	_sheet_refresh
	addl	$20, %esp
	jmp	L7
L37:
	pushl	$0
	pushl	%ebx
	pushl	$50
	pushl	-944(%ebp)
	call	_timer_set
	movl	-936(%ebp), %ebx
	pushl	$43
	leal	7(%edi), %eax
	pushl	%eax
	pushl	$28
	pushl	%edi
	pushl	$0
	pushl	4(%ebx)
	pushl	(%ebx)
	call	_boxfill8
	leal	8(%edi), %eax
	addl	$44, %esp
	pushl	$44
	pushl	%eax
	pushl	$28
	pushl	%edi
	pushl	%ebx
	jmp	L33
L36:
	movl	%esi, %ebx
	movzbl	%bl, %eax
	pushl	%eax
	leal	-892(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	je	L7
	pushl	-884(%ebp)
	pushl	-888(%ebp)
	pushl	$LC6
	leal	-844(%ebp), %ebx
	pushl	%ebx
	call	_sprintf
	addl	$16, %esp
	movl	-880(%ebp), %eax
	testl	$1, %eax
	je	L19
	movb	$76, -843(%ebp)
L19:
	testl	$2, %eax
	je	L20
	movb	$82, -841(%ebp)
L20:
	andl	$4, %eax
	je	L21
	movb	$67, -842(%ebp)
L21:
	pushl	$31
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	call	_boxfill8
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	call	_putfonts8_asc
	addl	$52, %esp
	pushl	$32
	pushl	$152
	pushl	$16
	pushl	$32
	pushl	-928(%ebp)
	call	_sheet_refresh
	movl	-888(%ebp), %edx
	movl	-884(%ebp), %eax
	addl	$20, %esp
	addl	%eax, -956(%ebp)
	addl	%edx, -952(%ebp)
	js	L38
L22:
	cmpl	$0, -956(%ebp)
	js	L39
L23:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -952(%ebp)
	jle	L24
	movl	%eax, -952(%ebp)
L24:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -956(%ebp)
	jle	L25
	movl	%eax, -956(%ebp)
L25:
	pushl	-956(%ebp)
	pushl	-952(%ebp)
	pushl	$LC7
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	$79
	pushl	$0
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	call	_putfonts8_asc
	pushl	$16
	pushl	$80
	pushl	$0
	pushl	$0
	pushl	-928(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	pushl	-956(%ebp)
	pushl	-952(%ebp)
	pushl	-932(%ebp)
	call	_sheet_move
	addl	$12, %esp
	testl	$1, -880(%ebp)
	je	L7
	movl	-956(%ebp), %eax
	subl	$8, %eax
	pushl	%eax
	movl	-952(%ebp), %eax
	subl	$80, %eax
	pushl	%eax
	pushl	-936(%ebp)
	call	_sheet_move
	addl	$12, %esp
	jmp	L7
L39:
	movl	$0, -956(%ebp)
	jmp	L23
L38:
	movl	$0, -952(%ebp)
	jmp	L22
L35:
	pushl	%eax
	leal	-844(%ebp), %ebx
	pushl	$LC4
	pushl	%ebx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$10
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	call	_boxfill8
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-940(%ebp)
	call	_putfonts8_asc
	pushl	$32
	pushl	$16
	pushl	$16
	pushl	$0
	pushl	-928(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	cmpl	$339, %esi
	jg	L13
	movb	_keytable.0-256(%esi), %al
	testb	%al, %al
	je	L13
	cmpl	$143, %edi
	jg	L13
	pushl	$1
	movb	%al, -844(%ebp)
	pushl	%ebx
	pushl	$0
	pushl	$7
	pushl	$28
	pushl	%edi
	addl	$8, %edi
	pushl	-936(%ebp)
	movb	$0, -843(%ebp)
	call	_bps
	addl	$28, %esp
L13:
	cmpl	$270, %esi
	je	L40
L15:
	pushl	$43
	leal	7(%edi), %eax
	pushl	%eax
	movl	-936(%ebp), %edx
	pushl	$28
	pushl	%edi
	pushl	$7
	pushl	4(%edx)
	pushl	(%edx)
	call	_boxfill8
	leal	8(%edi), %eax
	pushl	$44
	pushl	%eax
	pushl	$28
	pushl	%edi
	pushl	-936(%ebp)
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L7
L40:
	cmpl	$8, %edi
	jle	L15
	pushl	$1
	pushl	$LC5
	pushl	$0
	pushl	$7
	pushl	$28
	pushl	%edi
	subl	$8, %edi
	pushl	-936(%ebp)
	call	_bps
	addl	$28, %esp
	jmp	L15
L34:
	pushl	-972(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%ecx
	jmp	L7
	.data
LC8:
	.ascii "%10d\0"
	.text
	.balign 2
.globl _task_b_main
	.def	_task_b_main;	.scl	2;	.type	32;	.endef
_task_b_main:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	leal	-556(%ebp), %eax
	subl	$564, %esp
	leal	-44(%ebp), %ebx
	pushl	$0
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo_init
	call	_timer_alloc
	pushl	$2
	pushl	%ebx
	pushl	$2
	movl	%eax, -576(%ebp)
	pushl	%eax
	call	_timer_set
	addl	$32, %esp
L42:
	leal	-44(%ebp), %esi
	call	_io_cli
	pushl	%esi
	incl	%edi
	call	_fifo_status
	popl	%edx
	testl	%eax, %eax
	je	L48
	pushl	%esi
	call	_fifo_get
	movl	%eax, %ebx
	call	_io_sti
	popl	%eax
	cmpl	$2, %ebx
	jne	L42
	pushl	%edi
	leal	-572(%ebp), %ebx
	pushl	$LC8
	pushl	%ebx
	call	_sprintf
	pushl	$10
	pushl	%ebx
	pushl	$0
	pushl	$7
	pushl	$28
	pushl	$24
	pushl	8(%ebp)
	call	_bps
	addl	$40, %esp
	pushl	$2
	pushl	%esi
	pushl	$2
	pushl	-576(%ebp)
	call	_timer_set
	addl	$16, %esp
	jmp	L42
L48:
	call	_io_sti
	jmp	L42
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_bps;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_fifo_get;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_fifo_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_move;	.scl	2;	.type	32;	.endef
	.def	_task_b_main;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_taskrun;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_timer_set;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
	.def	_fifo_init;	.scl	2;	.type	32;	.endef
