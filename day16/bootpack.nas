[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo_init
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_io_sti
	EXTERN	_init_pit
	EXTERN	_io_out8
	EXTERN	_timer_alloc
	EXTERN	_timer_set
	EXTERN	_init_keyboard
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_init_screen
	EXTERN	_enable_mouse
	EXTERN	_init_mouse_cursor8
	EXTERN	_make_window8
	EXTERN	_make_textbox8
	EXTERN	_task_init
	EXTERN	_taskrun
	EXTERN	_sprintf
	EXTERN	_task_alloc
	EXTERN	_sheet_move
	EXTERN	_sheet_updown
	EXTERN	_putfonts8_asc
	EXTERN	_memman_total
	EXTERN	_sheet_refresh
	EXTERN	_io_cli
	EXTERN	_fifo_status
	EXTERN	_fifo_get
	EXTERN	_boxfill8
	EXTERN	_mouse_decode
	EXTERN	_keytable.0
	EXTERN	_bps
	EXTERN	_task_sleep
[FILE "bootpack.c"]
[SECTION .data]
_keytable.0:
	DB	0
	DB	0
	DB	49
	DB	50
	DB	51
	DB	52
	DB	53
	DB	54
	DB	55
	DB	56
	DB	57
	DB	48
	DB	45
	DB	94
	DB	0
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	64
	DB	91
	DB	0
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	59
	DB	58
	DB	0
	DB	0
	DB	93
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	44
	DB	46
	DB	47
	DB	0
	DB	42
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	55
	DB	56
	DB	57
	DB	45
	DB	52
	DB	53
	DB	54
	DB	43
	DB	49
	DB	50
	DB	51
	DB	48
	DB	46
LC0:
	DB	"task a",0x00
LC1:
	DB	"task_b%d",0x00
LC2:
	DB	"%3d %3d",0x00
LC3:
	DB	"memory %dMB free %dkb",0x00
LC6:
	DB	"[lcr %4d %4d]",0x00
LC7:
	DB	"(%3d,%3d)",0x00
LC4:
	DB	"%02X",0x00
LC5:
	DB	" ",0x00
[SECTION .text]
	ALIGN	2
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EAX,DWORD [-796+EBP]
	SUB	ESP,960
	LEA	ESI,DWORD [-876+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	128
	PUSH	ESI
	CALL	_fifo_init
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	CALL	_init_pit
	PUSH	248
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	ADD	ESP,32
	CALL	_timer_alloc
	PUSH	1
	PUSH	ESI
	MOV	DWORD [-944+EBP],EAX
	PUSH	50
	PUSH	EAX
	CALL	_timer_set
	PUSH	256
	PUSH	ESI
	CALL	_init_keyboard
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	ADD	ESP,32
	PUSH	3932160
	MOV	DWORD [-920+EBP],EAX
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	3932160
	CALL	_memman_free
	MOV	EAX,DWORD [-920+EBP]
	SUB	EAX,4194304
	PUSH	EAX
	PUSH	4194304
	PUSH	3932160
	CALL	_memman_free
	CALL	_init_palette
	MOVSX	EDX,WORD [4086]
	MOVSX	EAX,WORD [4084]
	PUSH	EDX
	MOV	DWORD [-912+EBP],EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	MOV	DWORD [-916+EBP],EDX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	ADD	ESP,44
	PUSH	EAX
	MOV	DWORD [-924+EBP],EAX
	CALL	_sheet_alloc
	PUSH	DWORD [-924+EBP]
	MOV	DWORD [-928+EBP],EAX
	CALL	_sheet_alloc
	PUSH	DWORD [-924+EBP]
	MOV	DWORD [-932+EBP],EAX
	CALL	_sheet_alloc
	MOVSX	EBX,WORD [4086]
	MOV	DWORD [-936+EBP],EAX
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EBX
	PUSH	EAX
	LEA	EBX,DWORD [-284+EBP]
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	8320
	PUSH	3932160
	MOV	DWORD [-940+EBP],EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	EDI,EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	PUSH	DWORD [-928+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,48
	PUSH	99
	PUSH	16
	PUSH	16
	PUSH	EBX
	PUSH	DWORD [-932+EBP]
	CALL	_sheet_setbuf
	PUSH	-1
	PUSH	52
	PUSH	144
	PUSH	EDI
	PUSH	DWORD [-936+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,40
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	DWORD [-940+EBP]
	CALL	_init_screen
	LEA	EAX,DWORD [-892+EBP]
	PUSH	EAX
	PUSH	512
	PUSH	ESI
	XOR	ESI,ESI
	CALL	_enable_mouse
	PUSH	99
	PUSH	EBX
	MOV	EBX,2
	CALL	_init_mouse_cursor8
	ADD	ESP,32
	PUSH	1
	PUSH	LC0
	PUSH	52
	PUSH	144
	PUSH	EDI
	MOV	EDI,8
	CALL	_make_window8
	PUSH	7
	PUSH	16
	PUSH	128
	PUSH	28
	PUSH	8
	PUSH	DWORD [-936+EBP]
	CALL	_make_textbox8
	ADD	ESP,44
	MOVSX	EAX,WORD [4084]
	LEA	ECX,DWORD [-16+EAX]
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	MOV	DWORD [-960+EBP],EAX
	MOV	DWORD [-952+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	3932160
	LEA	ECX,DWORD [-44+EAX]
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	MOV	DWORD [-964+EBP],EAX
	MOV	DWORD [-956+EBP],EAX
	CALL	_task_init
	PUSH	0
	PUSH	1
	PUSH	EAX
	MOV	DWORD [-972+EBP],EAX
	MOV	DWORD [-852+EBP],EAX
	CALL	_taskrun
	ADD	ESP,16
L6:
	PUSH	DWORD [-924+EBP]
	CALL	_sheet_alloc
	PUSH	7488
	PUSH	3932160
	MOV	DWORD [-28+EBP+ESI*4],EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	EBX,EAX
	PUSH	52
	PUSH	144
	PUSH	EAX
	PUSH	DWORD [-28+EBP+ESI*4]
	CALL	_sheet_setbuf
	LEA	EAX,DWORD [-844+EBP]
	ADD	ESP,32
	PUSH	ESI
	PUSH	LC1
	PUSH	EAX
	CALL	_sprintf
	LEA	EDX,DWORD [-844+EBP]
	PUSH	0
	PUSH	EDX
	PUSH	52
	PUSH	144
	PUSH	EBX
	CALL	_make_window8
	ADD	ESP,32
	CALL	_task_alloc
	PUSH	65536
	MOV	EBX,EAX
	PUSH	3932160
	MOV	DWORD [-908+EBP+ESI*4],EAX
	CALL	_memman_alloc_4k
	ADD	EAX,65528
	MOV	DWORD [72+EBX],EAX
	MOV	EBX,DWORD [-28+EBP+ESI*4]
	MOV	EAX,DWORD [-908+EBP+ESI*4]
	MOV	ECX,DWORD [72+EAX]
	MOV	DWORD [48+EAX],_task_b_main
	MOV	DWORD [88+EAX],8
	MOV	DWORD [92+EAX],16
	MOV	DWORD [96+EAX],8
	MOV	DWORD [100+EAX],8
	MOV	DWORD [104+EAX],8
	MOV	DWORD [108+EAX],8
	MOV	DWORD [4+ECX],EBX
	LEA	EBX,DWORD [1+ESI]
	PUSH	EBX
	MOV	ESI,EBX
	PUSH	2
	PUSH	EAX
	CALL	_taskrun
	ADD	ESP,20
	CMP	EBX,2
	JLE	L6
	PUSH	0
	LEA	EBX,DWORD [-844+EBP]
	PUSH	0
	PUSH	DWORD [-928+EBP]
	CALL	_sheet_move
	PUSH	DWORD [-964+EBP]
	PUSH	DWORD [-960+EBP]
	PUSH	DWORD [-932+EBP]
	CALL	_sheet_move
	PUSH	56
	PUSH	8
	PUSH	DWORD [-936+EBP]
	CALL	_sheet_move
	ADD	ESP,36
	PUSH	56
	PUSH	168
	PUSH	DWORD [-28+EBP]
	CALL	_sheet_move
	PUSH	116
	PUSH	8
	PUSH	DWORD [-24+EBP]
	CALL	_sheet_move
	PUSH	116
	PUSH	168
	PUSH	DWORD [-20+EBP]
	CALL	_sheet_move
	ADD	ESP,36
	PUSH	0
	PUSH	DWORD [-928+EBP]
	CALL	_sheet_updown
	PUSH	1
	PUSH	DWORD [-28+EBP]
	CALL	_sheet_updown
	PUSH	2
	PUSH	DWORD [-24+EBP]
	CALL	_sheet_updown
	PUSH	3
	PUSH	DWORD [-20+EBP]
	CALL	_sheet_updown
	ADD	ESP,32
	PUSH	4
	PUSH	DWORD [-936+EBP]
	CALL	_sheet_updown
	PUSH	5
	PUSH	DWORD [-932+EBP]
	CALL	_sheet_updown
	LEA	EAX,DWORD [-844+EBP]
	PUSH	DWORD [-964+EBP]
	PUSH	DWORD [-960+EBP]
	PUSH	LC2
	PUSH	EAX
	CALL	_sprintf
	LEA	EDX,DWORD [-844+EBP]
	ADD	ESP,32
	PUSH	EDX
	PUSH	7
	PUSH	0
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	PUSH	3932160
	CALL	_memman_total
	SHR	DWORD [-920+EBP],20
	SHR	EAX,10
	MOV	DWORD [ESP],EAX
	PUSH	DWORD [-920+EBP]
	PUSH	LC3
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,40
	PUSH	EBX
	PUSH	7
	PUSH	32
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	CALL	_putfonts8_asc
	PUSH	48
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	0
	PUSH	0
	PUSH	DWORD [-928+EBP]
	CALL	_sheet_refresh
	ADD	ESP,44
L7:
	LEA	EBX,DWORD [-876+EBP]
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo_status
	POP	ESI
	TEST	EAX,EAX
	JE	L34
	PUSH	EBX
	CALL	_fifo_get
	MOV	ESI,EAX
	CALL	_io_sti
	POP	EDX
	LEA	EAX,DWORD [-256+ESI]
	CMP	EAX,255
	JBE	L35
	LEA	EAX,DWORD [-512+ESI]
	CMP	EAX,255
	JBE	L36
	CMP	ESI,1
	JE	L37
	TEST	ESI,ESI
	JNE	L7
	PUSH	1
	PUSH	EBX
	PUSH	50
	PUSH	DWORD [-944+EBP]
	CALL	_timer_set
	LEA	EAX,DWORD [7+EDI]
	PUSH	43
	PUSH	EAX
	MOV	EAX,DWORD [-936+EBP]
	PUSH	28
	PUSH	EDI
	PUSH	7
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [EAX]
	CALL	_boxfill8
	LEA	EAX,DWORD [8+EDI]
	ADD	ESP,44
	PUSH	44
	PUSH	EAX
	PUSH	28
	PUSH	EDI
	PUSH	DWORD [-936+EBP]
L33:
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L7
L37:
	PUSH	0
	PUSH	EBX
	PUSH	50
	PUSH	DWORD [-944+EBP]
	CALL	_timer_set
	MOV	EBX,DWORD [-936+EBP]
	PUSH	43
	LEA	EAX,DWORD [7+EDI]
	PUSH	EAX
	PUSH	28
	PUSH	EDI
	PUSH	0
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_boxfill8
	LEA	EAX,DWORD [8+EDI]
	ADD	ESP,44
	PUSH	44
	PUSH	EAX
	PUSH	28
	PUSH	EDI
	PUSH	EBX
	JMP	L33
L36:
	MOV	EBX,ESI
	MOVZX	EAX,BL
	PUSH	EAX
	LEA	EAX,DWORD [-892+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L7
	PUSH	DWORD [-884+EBP]
	PUSH	DWORD [-888+EBP]
	PUSH	LC6
	LEA	EBX,DWORD [-844+EBP]
	PUSH	EBX
	CALL	_sprintf
	ADD	ESP,16
	MOV	EAX,DWORD [-880+EBP]
	TEST	EAX,1
	JE	L19
	MOV	BYTE [-843+EBP],76
L19:
	TEST	EAX,2
	JE	L20
	MOV	BYTE [-841+EBP],82
L20:
	AND	EAX,4
	JE	L21
	MOV	BYTE [-842+EBP],67
L21:
	PUSH	31
	PUSH	151
	PUSH	16
	PUSH	32
	PUSH	14
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	CALL	_boxfill8
	PUSH	EBX
	PUSH	7
	PUSH	16
	PUSH	32
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	CALL	_putfonts8_asc
	ADD	ESP,52
	PUSH	32
	PUSH	152
	PUSH	16
	PUSH	32
	PUSH	DWORD [-928+EBP]
	CALL	_sheet_refresh
	MOV	EDX,DWORD [-888+EBP]
	MOV	EAX,DWORD [-884+EBP]
	ADD	ESP,20
	ADD	DWORD [-956+EBP],EAX
	ADD	DWORD [-952+EBP],EDX
	JS	L38
L22:
	CMP	DWORD [-956+EBP],0
	JS	L39
L23:
	MOVSX	EAX,WORD [4084]
	DEC	EAX
	CMP	DWORD [-952+EBP],EAX
	JLE	L24
	MOV	DWORD [-952+EBP],EAX
L24:
	MOVSX	EAX,WORD [4086]
	DEC	EAX
	CMP	DWORD [-956+EBP],EAX
	JLE	L25
	MOV	DWORD [-956+EBP],EAX
L25:
	PUSH	DWORD [-956+EBP]
	PUSH	DWORD [-952+EBP]
	PUSH	LC7
	PUSH	EBX
	CALL	_sprintf
	PUSH	15
	PUSH	79
	PUSH	0
	PUSH	0
	PUSH	14
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	CALL	_boxfill8
	ADD	ESP,44
	PUSH	EBX
	PUSH	7
	PUSH	0
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	CALL	_putfonts8_asc
	PUSH	16
	PUSH	80
	PUSH	0
	PUSH	0
	PUSH	DWORD [-928+EBP]
	CALL	_sheet_refresh
	ADD	ESP,44
	PUSH	DWORD [-956+EBP]
	PUSH	DWORD [-952+EBP]
	PUSH	DWORD [-932+EBP]
	CALL	_sheet_move
	ADD	ESP,12
	TEST	DWORD [-880+EBP],1
	JE	L7
	MOV	EAX,DWORD [-956+EBP]
	SUB	EAX,8
	PUSH	EAX
	MOV	EAX,DWORD [-952+EBP]
	SUB	EAX,80
	PUSH	EAX
	PUSH	DWORD [-936+EBP]
	CALL	_sheet_move
	ADD	ESP,12
	JMP	L7
L39:
	MOV	DWORD [-956+EBP],0
	JMP	L23
L38:
	MOV	DWORD [-952+EBP],0
	JMP	L22
L35:
	PUSH	EAX
	LEA	EBX,DWORD [-844+EBP]
	PUSH	LC4
	PUSH	EBX
	CALL	_sprintf
	PUSH	31
	PUSH	15
	PUSH	16
	PUSH	0
	PUSH	10
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	CALL	_boxfill8
	ADD	ESP,40
	PUSH	EBX
	PUSH	7
	PUSH	16
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [-940+EBP]
	CALL	_putfonts8_asc
	PUSH	32
	PUSH	16
	PUSH	16
	PUSH	0
	PUSH	DWORD [-928+EBP]
	CALL	_sheet_refresh
	ADD	ESP,44
	CMP	ESI,339
	JG	L13
	MOV	AL,BYTE [_keytable.0-256+ESI]
	TEST	AL,AL
	JE	L13
	CMP	EDI,143
	JG	L13
	PUSH	1
	MOV	BYTE [-844+EBP],AL
	PUSH	EBX
	PUSH	0
	PUSH	7
	PUSH	28
	PUSH	EDI
	ADD	EDI,8
	PUSH	DWORD [-936+EBP]
	MOV	BYTE [-843+EBP],0
	CALL	_bps
	ADD	ESP,28
L13:
	CMP	ESI,270
	JE	L40
L15:
	PUSH	43
	LEA	EAX,DWORD [7+EDI]
	PUSH	EAX
	MOV	EDX,DWORD [-936+EBP]
	PUSH	28
	PUSH	EDI
	PUSH	7
	PUSH	DWORD [4+EDX]
	PUSH	DWORD [EDX]
	CALL	_boxfill8
	LEA	EAX,DWORD [8+EDI]
	PUSH	44
	PUSH	EAX
	PUSH	28
	PUSH	EDI
	PUSH	DWORD [-936+EBP]
	CALL	_sheet_refresh
	ADD	ESP,48
	JMP	L7
L40:
	CMP	EDI,8
	JLE	L15
	PUSH	1
	PUSH	LC5
	PUSH	0
	PUSH	7
	PUSH	28
	PUSH	EDI
	SUB	EDI,8
	PUSH	DWORD [-936+EBP]
	CALL	_bps
	ADD	ESP,28
	JMP	L15
L34:
	PUSH	DWORD [-972+EBP]
	CALL	_task_sleep
	CALL	_io_sti
	POP	ECX
	JMP	L7
[SECTION .data]
LC8:
	DB	"%10d",0x00
[SECTION .text]
	ALIGN	2
	GLOBAL	_task_b_main
_task_b_main:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	EDI,EDI
	PUSH	EBX
	LEA	EAX,DWORD [-556+EBP]
	SUB	ESP,564
	LEA	EBX,DWORD [-44+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	128
	PUSH	EBX
	CALL	_fifo_init
	CALL	_timer_alloc
	PUSH	2
	PUSH	EBX
	PUSH	2
	MOV	DWORD [-576+EBP],EAX
	PUSH	EAX
	CALL	_timer_set
	ADD	ESP,32
L42:
	LEA	ESI,DWORD [-44+EBP]
	CALL	_io_cli
	PUSH	ESI
	INC	EDI
	CALL	_fifo_status
	POP	EDX
	TEST	EAX,EAX
	JE	L48
	PUSH	ESI
	CALL	_fifo_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EAX
	CMP	EBX,2
	JNE	L42
	PUSH	EDI
	LEA	EBX,DWORD [-572+EBP]
	PUSH	LC8
	PUSH	EBX
	CALL	_sprintf
	PUSH	10
	PUSH	EBX
	PUSH	0
	PUSH	7
	PUSH	28
	PUSH	24
	PUSH	DWORD [8+EBP]
	CALL	_bps
	ADD	ESP,40
	PUSH	2
	PUSH	ESI
	PUSH	2
	PUSH	DWORD [-576+EBP]
	CALL	_timer_set
	ADD	ESP,16
	JMP	L42
L48:
	CALL	_io_sti
	JMP	L42
