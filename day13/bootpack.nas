[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo_init
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_io_sti
	EXTERN	_init_pit
	EXTERN	_io_out8
	EXTERN	_timer_alloc
	EXTERN	_timer_set
	EXTERN	_init_keyboard
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_init_screen
	EXTERN	_enable_mouse
	EXTERN	_init_mouse_cursor8
	EXTERN	_make_window8
	EXTERN	_sheet_move
	EXTERN	_sheet_updown
	EXTERN	_sprintf
	EXTERN	_putfonts8_asc
	EXTERN	_memman_total
	EXTERN	_sheet_refresh
	EXTERN	_timerctl
	EXTERN	_bps
	EXTERN	_io_cli
	EXTERN	_fifo_status
	EXTERN	_fifo_get
	EXTERN	_boxfill8
	EXTERN	_mouse_decode
[FILE "bootpack.c"]
[SECTION .data]
LC0:
	DB	"counter",0x00
LC1:
	DB	"%3d %3d",0x00
LC2:
	DB	"memory %dMB free %dkb",0x00
LC3:
	DB	"%010d",0x00
LC8:
	DB	"3s",0x00
LC7:
	DB	"10",0x00
LC5:
	DB	"[lcr %4d %4d]",0x00
LC6:
	DB	"(%3d,%3d)",0x00
LC4:
	DB	"%02X",0x00
[SECTION .text]
	ALIGN	2
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EAX,DWORD [-780+EBP]
	SUB	ESP,908
	PUSH	EAX
	LEA	EAX,DWORD [-860+EBP]
	PUSH	128
	PUSH	EAX
	CALL	_fifo_init
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	CALL	_init_pit
	PUSH	248
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	CALL	_timer_alloc
	MOV	EBX,EAX
	CALL	_timer_alloc
	MOV	ESI,EAX
	CALL	_timer_alloc
	LEA	EDX,DWORD [-860+EBP]
	PUSH	10
	PUSH	EDX
	MOV	DWORD [-904+EBP],EAX
	PUSH	1000
	PUSH	EBX
	LEA	EBX,DWORD [-860+EBP]
	CALL	_timer_set
	ADD	ESP,44
	PUSH	3
	PUSH	EBX
	PUSH	300
	PUSH	ESI
	CALL	_timer_set
	PUSH	1
	PUSH	EBX
	PUSH	50
	PUSH	DWORD [-904+EBP]
	CALL	_timer_set
	ADD	ESP,32
	PUSH	256
	PUSH	EBX
	CALL	_init_keyboard
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	PUSH	3932160
	MOV	DWORD [-888+EBP],EAX
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	3932160
	CALL	_memman_free
	MOV	EAX,DWORD [-888+EBP]
	ADD	ESP,32
	SUB	EAX,4194304
	PUSH	EAX
	PUSH	4194304
	PUSH	3932160
	CALL	_memman_free
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	MOVSX	EBX,WORD [4084]
	PUSH	EAX
	MOV	DWORD [-884+EBP],EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	MOV	DWORD [-880+EBP],EBX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	MOV	EBX,EAX
	PUSH	EAX
	CALL	_sheet_alloc
	ADD	ESP,32
	PUSH	EBX
	MOV	DWORD [-892+EBP],EAX
	CALL	_sheet_alloc
	PUSH	EBX
	LEA	EBX,DWORD [-268+EBP]
	MOV	DWORD [-896+EBP],EAX
	CALL	_sheet_alloc
	MOVSX	EDX,WORD [4086]
	MOV	DWORD [-900+EBP],EAX
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EDX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	8320
	PUSH	3932160
	MOV	EDI,EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	ESI,EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,44
	PUSH	99
	PUSH	16
	PUSH	16
	PUSH	EBX
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_setbuf
	PUSH	-1
	PUSH	52
	PUSH	160
	PUSH	ESI
	PUSH	DWORD [-900+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,40
	PUSH	DWORD [-884+EBP]
	PUSH	DWORD [-880+EBP]
	PUSH	EDI
	CALL	_init_screen
	LEA	EAX,DWORD [-876+EBP]
	PUSH	EAX
	LEA	EAX,DWORD [-860+EBP]
	PUSH	512
	PUSH	EAX
	CALL	_enable_mouse
	PUSH	99
	PUSH	EBX
	MOV	EBX,2
	CALL	_init_mouse_cursor8
	ADD	ESP,32
	PUSH	LC0
	PUSH	52
	PUSH	160
	PUSH	ESI
	CALL	_make_window8
	MOVSX	EAX,WORD [4084]
	LEA	ECX,DWORD [-16+EAX]
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	MOV	DWORD [-912+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	0
	LEA	ECX,DWORD [-44+EAX]
	PUSH	0
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	PUSH	DWORD [-892+EBP]
	MOV	DWORD [-916+EBP],EAX
	LEA	EBX,DWORD [-828+EBP]
	CALL	_sheet_move
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_move
	ADD	ESP,40
	PUSH	72
	PUSH	80
	PUSH	DWORD [-900+EBP]
	CALL	_sheet_move
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_updown
	PUSH	1
	PUSH	DWORD [-900+EBP]
	CALL	_sheet_updown
	PUSH	2
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_updown
	ADD	ESP,36
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	LC1
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	7
	PUSH	0
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	CALL	_putfonts8_asc
	ADD	ESP,40
	PUSH	3932160
	CALL	_memman_total
	SHR	DWORD [-888+EBP],20
	SHR	EAX,10
	MOV	DWORD [ESP],EAX
	PUSH	DWORD [-888+EBP]
	PUSH	LC2
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	7
	PUSH	32
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_putfonts8_asc
	ADD	ESP,40
	PUSH	48
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	0
	PUSH	0
L26:
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
L2:
	PUSH	DWORD [_timerctl]
	PUSH	LC3
	LEA	ESI,DWORD [-828+EBP]
	PUSH	ESI
	LEA	EBX,DWORD [-860+EBP]
	CALL	_sprintf
	PUSH	10
	PUSH	ESI
	PUSH	0
	PUSH	8
	PUSH	28
	PUSH	40
	PUSH	DWORD [-900+EBP]
	CALL	_bps
	ADD	ESP,40
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo_status
	POP	ECX
	TEST	EAX,EAX
	JE	L30
	LEA	EAX,DWORD [-860+EBP]
	PUSH	EAX
	CALL	_fifo_get
	MOV	EBX,EAX
	CALL	_io_sti
	POP	EDX
	LEA	EAX,DWORD [-256+EBX]
	CMP	EAX,255
	JBE	L31
	LEA	EAX,DWORD [-512+EBX]
	CMP	EAX,255
	JBE	L32
	CMP	EBX,10
	JE	L33
	CMP	EBX,3
	JE	L34
	CMP	EBX,1
	JE	L35
	TEST	EBX,EBX
	JNE	L2
	MOV	EAX,DWORD [-904+EBP]
	MOV	BYTE [16+EAX],1
	PUSH	111
	PUSH	15
	PUSH	96
	PUSH	8
	PUSH	14
L29:
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	LEA	EBX,DWORD [-860+EBP]
	PUSH	EDI
	CALL	_boxfill8
	MOV	EDX,DWORD [-904+EBP]
	MOVZX	EAX,BYTE [16+EDX]
	PUSH	EAX
	PUSH	EBX
	PUSH	50
	PUSH	EDX
	CALL	_timer_set
	ADD	ESP,44
	PUSH	111
	PUSH	15
	PUSH	96
	PUSH	8
	JMP	L26
L35:
	MOV	EAX,DWORD [-904+EBP]
	MOV	BYTE [16+EAX],0
	PUSH	111
	PUSH	15
	PUSH	96
	PUSH	8
	PUSH	7
	JMP	L29
L34:
	PUSH	LC8
	PUSH	7
	PUSH	80
L27:
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_putfonts8_asc
	PUSH	100
	PUSH	100
	PUSH	0
L28:
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	ADD	ESP,44
	JMP	L2
L33:
	PUSH	LC7
	PUSH	7
	PUSH	64
	JMP	L27
L32:
	MOVZX	EAX,BL
	PUSH	EAX
	LEA	EAX,DWORD [-876+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L2
	PUSH	DWORD [-868+EBP]
	PUSH	DWORD [-872+EBP]
	PUSH	LC5
	PUSH	ESI
	CALL	_sprintf
	ADD	ESP,16
	MOV	EAX,DWORD [-864+EBP]
	TEST	EAX,1
	JE	L11
	MOV	BYTE [-827+EBP],76
L11:
	TEST	EAX,2
	JE	L12
	MOV	BYTE [-825+EBP],82
L12:
	AND	EAX,4
	JE	L13
	MOV	BYTE [-826+EBP],67
L13:
	PUSH	31
	PUSH	151
	PUSH	16
	PUSH	32
	PUSH	14
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_boxfill8
	PUSH	ESI
	PUSH	7
	PUSH	16
	PUSH	32
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_putfonts8_asc
	ADD	ESP,52
	PUSH	32
	PUSH	152
	PUSH	16
	PUSH	32
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	MOV	EBX,DWORD [-872+EBP]
	MOV	EDX,DWORD [-868+EBP]
	ADD	ESP,20
	ADD	DWORD [-916+EBP],EDX
	ADD	DWORD [-912+EBP],EBX
	JS	L36
L14:
	CMP	DWORD [-916+EBP],0
	JS	L37
L15:
	MOVSX	EAX,WORD [4084]
	DEC	EAX
	CMP	DWORD [-912+EBP],EAX
	JLE	L16
	MOV	DWORD [-912+EBP],EAX
L16:
	MOVSX	EAX,WORD [4086]
	DEC	EAX
	CMP	DWORD [-916+EBP],EAX
	JLE	L17
	MOV	DWORD [-916+EBP],EAX
L17:
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	LC6
	PUSH	ESI
	CALL	_sprintf
	PUSH	15
	PUSH	79
	PUSH	0
	PUSH	0
	PUSH	14
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_boxfill8
	ADD	ESP,44
	PUSH	ESI
	PUSH	7
	PUSH	0
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_putfonts8_asc
	PUSH	16
	PUSH	80
	PUSH	0
	PUSH	0
	PUSH	DWORD [-892+EBP]
	CALL	_sheet_refresh
	ADD	ESP,44
	PUSH	DWORD [-916+EBP]
	PUSH	DWORD [-912+EBP]
	PUSH	DWORD [-896+EBP]
	CALL	_sheet_move
	ADD	ESP,12
	JMP	L2
L37:
	MOV	DWORD [-916+EBP],0
	JMP	L15
L36:
	MOV	DWORD [-912+EBP],0
	JMP	L14
L31:
	PUSH	EAX
	PUSH	LC4
	PUSH	ESI
	CALL	_sprintf
	PUSH	31
	PUSH	15
	PUSH	16
	PUSH	0
	PUSH	10
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_boxfill8
	ADD	ESP,40
	PUSH	ESI
	PUSH	7
	PUSH	16
	PUSH	0
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EDI
	CALL	_putfonts8_asc
	PUSH	32
	PUSH	16
	PUSH	16
	JMP	L28
L30:
	CALL	_io_sti
	JMP	L2
