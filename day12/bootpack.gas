	.file	"bootpack.c"
	.data
LC0:
	.ascii "counter\0"
LC1:
	.ascii "%3d %3d\0"
LC2:
	.ascii "memory %dMB free %dkb\0"
LC3:
	.ascii "%010d\0"
LC8:
	.ascii "3s\0"
LC7:
	.ascii "10\0"
LC5:
	.ascii "[lcr %4d %4d]\0"
LC6:
	.ascii "(%3d,%3d)\0"
LC4:
	.ascii "%02X\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-596(%ebp), %eax
	subl	$644, %esp
	leal	-540(%ebp), %edi
	pushl	%eax
	leal	-508(%ebp), %eax
	pushl	$8
	pushl	%eax
	call	_fifo8_init
	leal	-604(%ebp), %eax
	pushl	%eax
	pushl	$8
	pushl	%edi
	call	_fifo8_init
	leal	-572(%ebp), %edx
	leal	-612(%ebp), %eax
	pushl	%eax
	pushl	$8
	pushl	%edx
	call	_fifo8_init
	addl	$36, %esp
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-300(%ebp), %eax
	pushl	%eax
	pushl	$32
	pushl	$_keyfifo
	call	_fifo8_init
	leal	-428(%ebp), %eax
	pushl	%eax
	pushl	$128
	pushl	$_mousefifo
	call	_fifo8_init
	call	_init_pit
	pushl	$248
	pushl	$33
	call	_io_out8
	addl	$32, %esp
	pushl	$239
	pushl	$161
	call	_io_out8
	call	_timer_alloc
	movl	%eax, %ebx
	call	_timer_alloc
	movl	%eax, %esi
	call	_timer_alloc
	pushl	$1
	movl	%eax, -640(%ebp)
	leal	-508(%ebp), %eax
	pushl	%eax
	pushl	$1000
	pushl	%ebx
	call	_timer_set
	pushl	$1
	pushl	%edi
	pushl	$300
	pushl	%esi
	call	_timer_set
	leal	-572(%ebp), %edx
	addl	$40, %esp
	pushl	$1
	pushl	%edx
	pushl	$50
	pushl	-640(%ebp)
	call	_timer_set
	call	_init_keyboard
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, %esi
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	leal	-4194304(%esi), %eax
	shrl	$20, %esi
	addl	$40, %esp
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	call	_init_palette
	movswl	4086,%edi
	movswl	4084,%ebx
	pushl	%edi
	movl	%ebx, -616(%ebp)
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	movl	%eax, %ebx
	pushl	%eax
	call	_sheet_alloc
	addl	$32, %esp
	pushl	%ebx
	movl	%eax, -620(%ebp)
	call	_sheet_alloc
	pushl	%ebx
	leal	-268(%ebp), %ebx
	movl	%eax, -624(%ebp)
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -628(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$8320
	pushl	$3932160
	movl	%eax, -632(%ebp)
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, -636(%ebp)
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	pushl	-620(%ebp)
	call	_sheet_setbuf
	addl	$44, %esp
	pushl	$99
	pushl	$16
	pushl	$16
	pushl	%ebx
	pushl	-624(%ebp)
	call	_sheet_setbuf
	pushl	$-1
	pushl	$52
	pushl	$160
	pushl	-636(%ebp)
	pushl	-628(%ebp)
	call	_sheet_setbuf
	addl	$40, %esp
	pushl	%edi
	pushl	-616(%ebp)
	pushl	-632(%ebp)
	call	_init_screen
	leal	-588(%ebp), %eax
	pushl	%eax
	call	_enable_mouse
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	pushl	$LC0
	pushl	$52
	pushl	$160
	pushl	-636(%ebp)
	call	_make_window8
	addl	$40, %esp
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -648(%ebp)
	movswl	4086,%eax
	pushl	$0
	leal	-44(%eax), %ecx
	pushl	$0
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	pushl	-620(%ebp)
	movl	%eax, -652(%ebp)
	leal	-476(%ebp), %ebx
	call	_sheet_move
	pushl	-652(%ebp)
	pushl	-648(%ebp)
	pushl	-624(%ebp)
	call	_sheet_move
	pushl	$72
	pushl	$80
	pushl	-628(%ebp)
	call	_sheet_move
	addl	$36, %esp
	pushl	$0
	pushl	-620(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-628(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-624(%ebp)
	call	_sheet_updown
	pushl	-652(%ebp)
	pushl	-648(%ebp)
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	pushl	$3932160
	call	_memman_total
	shrl	$10, %eax
	movl	%eax, (%esp)
	pushl	%esi
	pushl	$LC2
	pushl	%ebx
	call	_sprintf
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$32
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_putfonts8_asc
	pushl	$48
	movswl	4084,%eax
	pushl	%eax
	pushl	$0
L27:
	pushl	$0
	pushl	-620(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
L2:
	pushl	_timerctl
	pushl	$LC3
	leal	-476(%ebp), %ebx
	pushl	%ebx
	leal	-508(%ebp), %esi
	leal	-540(%ebp), %edi
	call	_sprintf
	pushl	$43
	pushl	$119
	pushl	$28
	pushl	$40
	pushl	$8
	pushl	$160
	pushl	-636(%ebp)
	call	_boxfill8
	addl	$40, %esp
	pushl	%ebx
	pushl	$0
	pushl	$28
	pushl	$40
	pushl	$160
	pushl	-636(%ebp)
	call	_putfonts8_asc
	pushl	$44
	pushl	$120
	pushl	$28
	pushl	$40
	pushl	-628(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	call	_io_cli
	pushl	$_keyfifo
	call	_fifo8_status
	pushl	$_mousefifo
	movl	%eax, %ebx
	call	_fifo8_status
	pushl	%esi
	addl	%eax, %ebx
	call	_fifo8_status
	pushl	%edi
	addl	%eax, %ebx
	call	_fifo8_status
	leal	-572(%ebp), %edx
	addl	%eax, %ebx
	pushl	%edx
	call	_fifo8_status
	addl	$20, %esp
	leal	(%eax,%ebx), %eax
	testl	%eax, %eax
	je	L29
	pushl	$_keyfifo
	call	_fifo8_status
	popl	%ecx
	testl	%eax, %eax
	jne	L30
	pushl	$_mousefifo
	call	_fifo8_status
	popl	%edx
	testl	%eax, %eax
	jne	L31
	pushl	%esi
	call	_fifo8_status
	popl	%ebx
	testl	%eax, %eax
	jne	L32
	pushl	%edi
	call	_fifo8_status
	popl	%ecx
	testl	%eax, %eax
	jne	L33
	leal	-572(%ebp), %edx
	pushl	%edx
	call	_fifo8_status
	popl	%edx
	testl	%eax, %eax
	je	L2
	leal	-572(%ebp), %ebx
	pushl	%ebx
	call	_fifo8_get
	movl	%eax, %ebx
	call	_io_sti
	popl	%eax
	testl	%ebx, %ebx
	je	L24
	movl	-640(%ebp), %eax
	movb	$0, 12(%eax)
	pushl	$111
	pushl	$15
	pushl	$96
	pushl	$8
	pushl	$7
L28:
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_boxfill8
	movl	-640(%ebp), %ebx
	addl	$28, %esp
	movzbl	12(%ebx), %eax
	pushl	%eax
	leal	-572(%ebp), %eax
	pushl	%eax
	pushl	$50
	pushl	%ebx
	call	_timer_set
	pushl	$111
	pushl	$15
	pushl	$96
	pushl	$8
	pushl	-620(%ebp)
	call	_sheet_refresh
	addl	$36, %esp
	jmp	L2
L24:
	movl	-640(%ebp), %edx
	movb	$1, 12(%edx)
	pushl	$111
	pushl	$15
	pushl	$96
	pushl	$8
	pushl	$14
	jmp	L28
L33:
	pushl	%edi
	call	_fifo8_get
	call	_io_sti
	pushl	$LC8
	pushl	$7
	pushl	$80
L26:
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_putfonts8_asc
	pushl	$100
	pushl	$100
	pushl	$0
	pushl	$0
	pushl	-620(%ebp)
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L2
L32:
	pushl	%esi
	call	_fifo8_get
	call	_io_sti
	pushl	$LC7
	pushl	$7
	pushl	$64
	jmp	L26
L31:
	pushl	$_mousefifo
	call	_fifo8_get
	movl	%eax, %ebx
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-588(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	addl	$12, %esp
	testl	%eax, %eax
	je	L2
	pushl	-580(%ebp)
	pushl	-584(%ebp)
	pushl	$LC5
	leal	-476(%ebp), %edx
	pushl	%edx
	call	_sprintf
	addl	$16, %esp
	movl	-576(%ebp), %eax
	testl	$1, %eax
	je	L11
	movb	$76, -475(%ebp)
L11:
	testl	$2, %eax
	je	L12
	movb	$82, -473(%ebp)
L12:
	andl	$4, %eax
	je	L13
	movb	$67, -474(%ebp)
L13:
	pushl	$31
	leal	-476(%ebp), %ebx
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_boxfill8
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_putfonts8_asc
	addl	$52, %esp
	pushl	$32
	pushl	$152
	pushl	$16
	pushl	$32
	pushl	-620(%ebp)
	call	_sheet_refresh
	movl	-584(%ebp), %edx
	movl	-580(%ebp), %eax
	addl	$20, %esp
	addl	%eax, -652(%ebp)
	addl	%edx, -648(%ebp)
	js	L34
L14:
	cmpl	$0, -652(%ebp)
	js	L35
L15:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -648(%ebp)
	jle	L16
	movl	%eax, -648(%ebp)
L16:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -652(%ebp)
	jle	L17
	movl	%eax, -652(%ebp)
L17:
	pushl	-652(%ebp)
	pushl	-648(%ebp)
	pushl	$LC6
	leal	-476(%ebp), %ebx
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	$79
	pushl	$0
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_putfonts8_asc
	pushl	$16
	pushl	$80
	pushl	$0
	pushl	$0
	pushl	-620(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	pushl	-652(%ebp)
	pushl	-648(%ebp)
	pushl	-624(%ebp)
	call	_sheet_move
	addl	$12, %esp
	jmp	L2
L35:
	movl	$0, -652(%ebp)
	jmp	L15
L34:
	movl	$0, -648(%ebp)
	jmp	L14
L30:
	pushl	$_keyfifo
	call	_fifo8_get
	movl	%eax, %ebx
	call	_io_sti
	pushl	%ebx
	leal	-476(%ebp), %ebx
	pushl	$LC4
	pushl	%ebx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-632(%ebp)
	call	_putfonts8_asc
	pushl	$32
	pushl	$16
	pushl	$16
	jmp	L27
L29:
	call	_io_sti
	jmp	L2
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_fifo8_get;	.scl	2;	.type	32;	.endef
	.def	_fifo8_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_move;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_timer_set;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
	.def	_fifo8_init;	.scl	2;	.type	32;	.endef
