     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_init_keyboard
    10 00000000                                 	EXTERN	_memman_init
    11 00000000                                 	EXTERN	_memman_free
    12 00000000                                 	EXTERN	_init_palette
    13 00000000                                 	EXTERN	_init_screen
    14 00000000                                 	EXTERN	_hankaku
    15 00000000                                 	EXTERN	_putfont8
    16 00000000                                 	EXTERN	_putfonts8_asc
    17 00000000                                 	EXTERN	_sprintf
    18 00000000                                 	EXTERN	_enable_mouse
    19 00000000                                 	EXTERN	_init_mouse_cursor8
    20 00000000                                 	EXTERN	_putblock8_8
    21 00000000                                 	EXTERN	_memman_total
    22 00000000                                 	EXTERN	_io_out8
    23 00000000                                 	EXTERN	_keyfifo
    24 00000000                                 	EXTERN	_fifo8_init
    25 00000000                                 	EXTERN	_mousefifo
    26 00000000                                 	EXTERN	_io_cli
    27 00000000                                 	EXTERN	_fifo8_status
    28 00000000                                 	EXTERN	_fifo8_get
    29 00000000                                 	EXTERN	_mouse_decode
    30 00000000                                 	EXTERN	_boxfill8
    31 00000000                                 	EXTERN	_io_stihlt
    32 00000000                                 	EXTERN	_io_load_eflags
    33 00000000                                 	EXTERN	_io_store_eflags
    34 00000000                                 	EXTERN	_memtest_sub
    35 00000000                                 	EXTERN	_load_cr0
    36 00000000                                 	EXTERN	_store_cr0
    37 00000000                                 [FILE "bootpack.c"]
    38                                          [SECTION .data]
    39 00000000                                 LC0:
    40 00000000 68 65 6C 6C 6F 20 6F 73 2E 00   	DB	"hello os.",0x00
    41 0000000A                                 LC1:
    42 0000000A 73 63 72 6E 78 3D 20 25 64 00   	DB	"scrnx= %d",0x00
    43 00000014                                 LC2:
    44 00000014 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB free %dkb",0x00
       0000001E 42 20 66 72 65 65 20 25 64 6B 
       00000028 62 00 
    45 0000002A                                 LC4:
    46 0000002A 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       00000034 34 64 5D 00 
    47 00000038                                 LC5:
    48 00000038 28 25 33 64 2C 25 33 64 29 00   	DB	"(%3d,%3d)",0x00
    49 00000042                                 LC3:
    50 00000042 25 30 32 58 00                  	DB	"%02X",0x00
    51                                          [SECTION .text]
    52 00000000                                 	ALIGN	2
    53 00000000                                 	GLOBAL	_HariMain
    54 00000000                                 _HariMain:
    55 00000000 55                              	PUSH	EBP
    56 00000001 89 E5                           	MOV	EBP,ESP
    57 00000003 57                              	PUSH	EDI
    58 00000004 56                              	PUSH	ESI
    59 00000005 53                              	PUSH	EBX
    60 00000006 8D 75 C4                        	LEA	ESI,DWORD [-60+EBP]
    61 00000009 81 EC 000001F0                  	SUB	ESP,496
    62 0000000F BB 00000002                     	MOV	EBX,2
    63 00000014 E8 [00000000]                   	CALL	_init_gdtidt
    64 00000019 E8 [00000000]                   	CALL	_init_pic
    65 0000001E E8 [00000000]                   	CALL	_io_sti
    66 00000023 E8 [00000000]                   	CALL	_init_keyboard
    67 00000028 68 BFFFFFFF                     	PUSH	-1073741825
    68 0000002D 68 00400000                     	PUSH	4194304
    69 00000032 E8 000004B5                     	CALL	_memtest
    70 00000037 68 003C0000                     	PUSH	3932160
    71 0000003C 89 85 FFFFFE0C                  	MOV	DWORD [-500+EBP],EAX
    72 00000042 E8 [00000000]                   	CALL	_memman_init
    73 00000047 68 0009E000                     	PUSH	647168
    74 0000004C 68 00001000                     	PUSH	4096
    75 00000051 68 003C0000                     	PUSH	3932160
    76 00000056 E8 [00000000]                   	CALL	_memman_free
    77 0000005B 8B 85 FFFFFE0C                  	MOV	EAX,DWORD [-500+EBP]
    78 00000061 2D 00400000                     	SUB	EAX,4194304
    79 00000066 50                              	PUSH	EAX
    80 00000067 68 00400000                     	PUSH	4194304
    81 0000006C 68 003C0000                     	PUSH	3932160
    82 00000071 E8 [00000000]                   	CALL	_memman_free
    83 00000076 83 C4 24                        	ADD	ESP,36
    84 00000079 E8 [00000000]                   	CALL	_init_palette
    85 0000007E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    86 00000085 89 85 FFFFFE10                  	MOV	DWORD [-496+EBP],EAX
    87 0000008B 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    88 00000092 50                              	PUSH	EAX
    89 00000093 FF B5 FFFFFE10                  	PUSH	DWORD [-496+EBP]
    90 00000099 FF 35 00000FF8                  	PUSH	DWORD [4088]
    91 0000009F E8 [00000000]                   	CALL	_init_screen
    92 000000A4 68 [00000410]                   	PUSH	_hankaku+1040
    93 000000A9 6A 07                           	PUSH	7
    94 000000AB 6A 08                           	PUSH	8
    95 000000AD 6A 08                           	PUSH	8
    96 000000AF 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    97 000000B6 50                              	PUSH	EAX
    98 000000B7 FF 35 00000FF8                  	PUSH	DWORD [4088]
    99 000000BD E8 [00000000]                   	CALL	_putfont8
   100 000000C2 83 C4 24                        	ADD	ESP,36
   101 000000C5 68 [00000420]                   	PUSH	_hankaku+1056
   102 000000CA 6A 07                           	PUSH	7
   103 000000CC 6A 08                           	PUSH	8
   104 000000CE 6A 10                           	PUSH	16
   105 000000D0 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   106 000000D7 50                              	PUSH	EAX
   107 000000D8 FF 35 00000FF8                  	PUSH	DWORD [4088]
   108 000000DE E8 [00000000]                   	CALL	_putfont8
   109 000000E3 68 [00000430]                   	PUSH	_hankaku+1072
   110 000000E8 6A 07                           	PUSH	7
   111 000000EA 6A 08                           	PUSH	8
   112 000000EC 6A 18                           	PUSH	24
   113 000000EE 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   114 000000F5 50                              	PUSH	EAX
   115 000000F6 FF 35 00000FF8                  	PUSH	DWORD [4088]
   116 000000FC E8 [00000000]                   	CALL	_putfont8
   117 00000101 83 C4 30                        	ADD	ESP,48
   118 00000104 68 [00000310]                   	PUSH	_hankaku+784
   119 00000109 6A 07                           	PUSH	7
   120 0000010B 6A 08                           	PUSH	8
   121 0000010D 6A 28                           	PUSH	40
   122 0000010F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   123 00000116 50                              	PUSH	EAX
   124 00000117 FF 35 00000FF8                  	PUSH	DWORD [4088]
   125 0000011D E8 [00000000]                   	CALL	_putfont8
   126 00000122 68 [00000320]                   	PUSH	_hankaku+800
   127 00000127 6A 07                           	PUSH	7
   128 00000129 6A 08                           	PUSH	8
   129 0000012B 6A 30                           	PUSH	48
   130 0000012D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   131 00000134 50                              	PUSH	EAX
   132 00000135 FF 35 00000FF8                  	PUSH	DWORD [4088]
   133 0000013B E8 [00000000]                   	CALL	_putfont8
   134 00000140 83 C4 30                        	ADD	ESP,48
   135 00000143 68 [00000000]                   	PUSH	LC0
   136 00000148 6A 07                           	PUSH	7
   137 0000014A 6A 32                           	PUSH	50
   138 0000014C 6A 3C                           	PUSH	60
   139 0000014E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   140 00000155 50                              	PUSH	EAX
   141 00000156 FF 35 00000FF8                  	PUSH	DWORD [4088]
   142 0000015C E8 [00000000]                   	CALL	_putfonts8_asc
   143 00000161 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   144 00000168 50                              	PUSH	EAX
   145 00000169 68 [0000000A]                   	PUSH	LC1
   146 0000016E 56                              	PUSH	ESI
   147 0000016F E8 [00000000]                   	CALL	_sprintf
   148 00000174 83 C4 24                        	ADD	ESP,36
   149 00000177 56                              	PUSH	ESI
   150 00000178 6A 07                           	PUSH	7
   151 0000017A 6A 40                           	PUSH	64
   152 0000017C 6A 10                           	PUSH	16
   153 0000017E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   154 00000185 50                              	PUSH	EAX
   155 00000186 FF 35 00000FF8                  	PUSH	DWORD [4088]
   156 0000018C E8 [00000000]                   	CALL	_putfonts8_asc
   157 00000191 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   158 00000198 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   159 0000019B 89 C8                           	MOV	EAX,ECX
   160 0000019D 99                              	CDQ
   161 0000019E F7 FB                           	IDIV	EBX
   162 000001A0 89 C7                           	MOV	EDI,EAX
   163 000001A2 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   164 000001A9 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
   165 000001AC 89 C8                           	MOV	EAX,ECX
   166 000001AE 99                              	CDQ
   167 000001AF F7 FB                           	IDIV	EBX
   168 000001B1 89 85 FFFFFE08                  	MOV	DWORD [-504+EBP],EAX
   169 000001B7 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
   170 000001BD 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   171 000001C3 50                              	PUSH	EAX
   172 000001C4 E8 [00000000]                   	CALL	_enable_mouse
   173 000001C9 6A 0E                           	PUSH	14
   174 000001CB 53                              	PUSH	EBX
   175 000001CC E8 [00000000]                   	CALL	_init_mouse_cursor8
   176 000001D1 83 C4 24                        	ADD	ESP,36
   177 000001D4 6A 10                           	PUSH	16
   178 000001D6 53                              	PUSH	EBX
   179 000001D7 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   180 000001DD 57                              	PUSH	EDI
   181 000001DE 6A 10                           	PUSH	16
   182 000001E0 6A 10                           	PUSH	16
   183 000001E2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   184 000001E9 50                              	PUSH	EAX
   185 000001EA FF 35 00000FF8                  	PUSH	DWORD [4088]
   186 000001F0 E8 [00000000]                   	CALL	_putblock8_8
   187 000001F5 83 C4 20                        	ADD	ESP,32
   188 000001F8 68 003C0000                     	PUSH	3932160
   189 000001FD E8 [00000000]                   	CALL	_memman_total
   190 00000202 C1 AD FFFFFE0C 14               	SHR	DWORD [-500+EBP],20
   191 00000209 C1 E8 0A                        	SHR	EAX,10
   192 0000020C 89 04 24                        	MOV	DWORD [ESP],EAX
   193 0000020F FF B5 FFFFFE0C                  	PUSH	DWORD [-500+EBP]
   194 00000215 68 [00000014]                   	PUSH	LC2
   195 0000021A 56                              	PUSH	ESI
   196 0000021B E8 [00000000]                   	CALL	_sprintf
   197 00000220 56                              	PUSH	ESI
   198 00000221 6A 07                           	PUSH	7
   199 00000223 68 00000084                     	PUSH	132
   200 00000228 6A 00                           	PUSH	0
   201 0000022A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   202 00000231 50                              	PUSH	EAX
   203 00000232 FF 35 00000FF8                  	PUSH	DWORD [4088]
   204 00000238 E8 [00000000]                   	CALL	_putfonts8_asc
   205 0000023D 83 C4 28                        	ADD	ESP,40
   206 00000240 68 000000F9                     	PUSH	249
   207 00000245 6A 21                           	PUSH	33
   208 00000247 E8 [00000000]                   	CALL	_io_out8
   209 0000024C 68 000000EF                     	PUSH	239
   210 00000251 68 000000A1                     	PUSH	161
   211 00000256 E8 [00000000]                   	CALL	_io_out8
   212 0000025B 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
   213 00000261 50                              	PUSH	EAX
   214 00000262 6A 20                           	PUSH	32
   215 00000264 68 [00000000]                   	PUSH	_keyfifo
   216 00000269 E8 [00000000]                   	CALL	_fifo8_init
   217 0000026E 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
   218 00000274 50                              	PUSH	EAX
   219 00000275 68 00000080                     	PUSH	128
   220 0000027A 68 [00000000]                   	PUSH	_mousefifo
   221 0000027F E8 [00000000]                   	CALL	_fifo8_init
   222 00000284 83 C4 28                        	ADD	ESP,40
   223 00000287                                 L2:
   224 00000287 E8 [00000000]                   	CALL	_io_cli
   225 0000028C 68 [00000000]                   	PUSH	_keyfifo
   226 00000291 E8 [00000000]                   	CALL	_fifo8_status
   227 00000296 68 [00000000]                   	PUSH	_mousefifo
   228 0000029B 89 C3                           	MOV	EBX,EAX
   229 0000029D E8 [00000000]                   	CALL	_fifo8_status
   230 000002A2 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   231 000002A5 5B                              	POP	EBX
   232 000002A6 5E                              	POP	ESI
   233 000002A7 85 C0                           	TEST	EAX,EAX
   234 000002A9 0F 84 00000232                  	JE	L18
   235 000002AF 68 [00000000]                   	PUSH	_keyfifo
   236 000002B4 E8 [00000000]                   	CALL	_fifo8_status
   237 000002B9 59                              	POP	ECX
   238 000002BA 85 C0                           	TEST	EAX,EAX
   239 000002BC 0F 85 000001BD                  	JNE	L19
   240 000002C2 68 [00000000]                   	PUSH	_mousefifo
   241 000002C7 E8 [00000000]                   	CALL	_fifo8_status
   242 000002CC 5A                              	POP	EDX
   243 000002CD 85 C0                           	TEST	EAX,EAX
   244 000002CF 74 B6                           	JE	L2
   245 000002D1 68 [00000000]                   	PUSH	_mousefifo
   246 000002D6 E8 [00000000]                   	CALL	_fifo8_get
   247 000002DB 89 C3                           	MOV	EBX,EAX
   248 000002DD E8 [00000000]                   	CALL	_io_sti
   249 000002E2 0F B6 C3                        	MOVZX	EAX,BL
   250 000002E5 50                              	PUSH	EAX
   251 000002E6 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   252 000002EC 50                              	PUSH	EAX
   253 000002ED E8 [00000000]                   	CALL	_mouse_decode
   254 000002F2 83 C4 0C                        	ADD	ESP,12
   255 000002F5 85 C0                           	TEST	EAX,EAX
   256 000002F7 74 8E                           	JE	L2
   257 000002F9 FF B5 FFFFFE1C                  	PUSH	DWORD [-484+EBP]
   258 000002FF FF B5 FFFFFE18                  	PUSH	DWORD [-488+EBP]
   259 00000305 68 [0000002A]                   	PUSH	LC4
   260 0000030A 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   261 0000030D 53                              	PUSH	EBX
   262 0000030E E8 [00000000]                   	CALL	_sprintf
   263 00000313 83 C4 10                        	ADD	ESP,16
   264 00000316 8B 85 FFFFFE20                  	MOV	EAX,DWORD [-480+EBP]
   265 0000031C A9 00000001                     	TEST	EAX,1
   266 00000321 74 04                           	JE	L11
   267 00000323 C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   268 00000327                                 L11:
   269 00000327 A9 00000002                     	TEST	EAX,2
   270 0000032C 74 04                           	JE	L12
   271 0000032E C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   272 00000332                                 L12:
   273 00000332 83 E0 04                        	AND	EAX,4
   274 00000335 74 04                           	JE	L13
   275 00000337 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   276 0000033B                                 L13:
   277 0000033B 6A 1F                           	PUSH	31
   278 0000033D 68 00000097                     	PUSH	151
   279 00000342 6A 10                           	PUSH	16
   280 00000344 6A 20                           	PUSH	32
   281 00000346 6A 0E                           	PUSH	14
   282 00000348 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   283 0000034F 50                              	PUSH	EAX
   284 00000350 FF 35 00000FF8                  	PUSH	DWORD [4088]
   285 00000356 E8 [00000000]                   	CALL	_boxfill8
   286 0000035B 53                              	PUSH	EBX
   287 0000035C 6A 07                           	PUSH	7
   288 0000035E 6A 10                           	PUSH	16
   289 00000360 6A 20                           	PUSH	32
   290 00000362 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   291 00000369 50                              	PUSH	EAX
   292 0000036A FF 35 00000FF8                  	PUSH	DWORD [4088]
   293 00000370 E8 [00000000]                   	CALL	_putfonts8_asc
   294 00000375 8B 85 FFFFFE08                  	MOV	EAX,DWORD [-504+EBP]
   295 0000037B 83 C4 34                        	ADD	ESP,52
   296 0000037E 83 C0 0F                        	ADD	EAX,15
   297 00000381 50                              	PUSH	EAX
   298 00000382 8D 47 0F                        	LEA	EAX,DWORD [15+EDI]
   299 00000385 50                              	PUSH	EAX
   300 00000386 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   301 0000038C 57                              	PUSH	EDI
   302 0000038D 6A 0E                           	PUSH	14
   303 0000038F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   304 00000396 50                              	PUSH	EAX
   305 00000397 FF 35 00000FF8                  	PUSH	DWORD [4088]
   306 0000039D E8 [00000000]                   	CALL	_boxfill8
   307 000003A2 83 C4 1C                        	ADD	ESP,28
   308 000003A5 8B 85 FFFFFE1C                  	MOV	EAX,DWORD [-484+EBP]
   309 000003AB 01 85 FFFFFE08                  	ADD	DWORD [-504+EBP],EAX
   310 000003B1 03 BD FFFFFE18                  	ADD	EDI,DWORD [-488+EBP]
   311 000003B7 0F 88 000000BB                  	JS	L20
   312 000003BD                                 L14:
   313 000003BD 83 BD FFFFFE08 00               	CMP	DWORD [-504+EBP],0
   314 000003C4 0F 88 0000009F                  	JS	L21
   315 000003CA                                 L15:
   316 000003CA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   317 000003D1 83 E8 10                        	SUB	EAX,16
   318 000003D4 39 C7                           	CMP	EDI,EAX
   319 000003D6 7E 02                           	JLE	L16
   320 000003D8 89 C7                           	MOV	EDI,EAX
   321 000003DA                                 L16:
   322 000003DA 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   323 000003E1 83 E8 10                        	SUB	EAX,16
   324 000003E4 39 85 FFFFFE08                  	CMP	DWORD [-504+EBP],EAX
   325 000003EA 7E 02                           	JLE	L17
   326 000003EC 89 C7                           	MOV	EDI,EAX
   327 000003EE                                 L17:
   328 000003EE FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   329 000003F4 57                              	PUSH	EDI
   330 000003F5 68 [00000038]                   	PUSH	LC5
   331 000003FA 53                              	PUSH	EBX
   332 000003FB E8 [00000000]                   	CALL	_sprintf
   333 00000400 6A 0F                           	PUSH	15
   334 00000402 6A 4F                           	PUSH	79
   335 00000404 6A 00                           	PUSH	0
   336 00000406 6A 00                           	PUSH	0
   337 00000408 6A 0E                           	PUSH	14
   338 0000040A 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   339 00000411 50                              	PUSH	EAX
   340 00000412 FF 35 00000FF8                  	PUSH	DWORD [4088]
   341 00000418 E8 [00000000]                   	CALL	_boxfill8
   342 0000041D 83 C4 2C                        	ADD	ESP,44
   343 00000420 53                              	PUSH	EBX
   344 00000421 6A 07                           	PUSH	7
   345 00000423 6A 00                           	PUSH	0
   346 00000425 6A 00                           	PUSH	0
   347 00000427 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   348 0000042E 50                              	PUSH	EAX
   349 0000042F FF 35 00000FF8                  	PUSH	DWORD [4088]
   350 00000435 E8 [00000000]                   	CALL	_putfonts8_asc
   351 0000043A 8D 85 FFFFFEC4                  	LEA	EAX,DWORD [-316+EBP]
   352 00000440 6A 10                           	PUSH	16
   353 00000442 50                              	PUSH	EAX
   354 00000443 FF B5 FFFFFE08                  	PUSH	DWORD [-504+EBP]
   355 00000449 57                              	PUSH	EDI
   356 0000044A 6A 10                           	PUSH	16
   357 0000044C 6A 10                           	PUSH	16
   358 0000044E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   359 00000455 50                              	PUSH	EAX
   360 00000456 FF 35 00000FF8                  	PUSH	DWORD [4088]
   361 0000045C E8 [00000000]                   	CALL	_putblock8_8
   362 00000461 83 C4 38                        	ADD	ESP,56
   363 00000464 E9 FFFFFE1E                     	JMP	L2
   364 00000469                                 L21:
   365 00000469 C7 85 FFFFFE08 00000000         	MOV	DWORD [-504+EBP],0
   366 00000473 E9 FFFFFF52                     	JMP	L15
   367 00000478                                 L20:
   368 00000478 31 FF                           	XOR	EDI,EDI
   369 0000047A E9 FFFFFF3E                     	JMP	L14
   370 0000047F                                 L19:
   371 0000047F 68 [00000000]                   	PUSH	_keyfifo
   372 00000484 E8 [00000000]                   	CALL	_fifo8_get
   373 00000489 89 C3                           	MOV	EBX,EAX
   374 0000048B E8 [00000000]                   	CALL	_io_sti
   375 00000490 53                              	PUSH	EBX
   376 00000491 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   377 00000494 68 [00000042]                   	PUSH	LC3
   378 00000499 53                              	PUSH	EBX
   379 0000049A E8 [00000000]                   	CALL	_sprintf
   380 0000049F 6A 1F                           	PUSH	31
   381 000004A1 6A 0F                           	PUSH	15
   382 000004A3 6A 10                           	PUSH	16
   383 000004A5 6A 00                           	PUSH	0
   384 000004A7 6A 0E                           	PUSH	14
   385 000004A9 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   386 000004B0 50                              	PUSH	EAX
   387 000004B1 FF 35 00000FF8                  	PUSH	DWORD [4088]
   388 000004B7 E8 [00000000]                   	CALL	_boxfill8
   389 000004BC 83 C4 2C                        	ADD	ESP,44
   390 000004BF 53                              	PUSH	EBX
   391 000004C0 6A 07                           	PUSH	7
   392 000004C2 6A 10                           	PUSH	16
   393 000004C4 6A 00                           	PUSH	0
   394 000004C6 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   395 000004CD 50                              	PUSH	EAX
   396 000004CE FF 35 00000FF8                  	PUSH	DWORD [4088]
   397 000004D4 E8 [00000000]                   	CALL	_putfonts8_asc
   398 000004D9 83 C4 18                        	ADD	ESP,24
   399 000004DC E9 FFFFFDA6                     	JMP	L2
   400 000004E1                                 L18:
   401 000004E1 E8 [00000000]                   	CALL	_io_stihlt
   402 000004E6 E9 FFFFFD9C                     	JMP	L2
   403 000004EB 90                              	ALIGN	2
   404 000004EC                                 	GLOBAL	_memtest
   405 000004EC                                 _memtest:
   406 000004EC 55                              	PUSH	EBP
   407 000004ED 89 E5                           	MOV	EBP,ESP
   408 000004EF 56                              	PUSH	ESI
   409 000004F0 53                              	PUSH	EBX
   410 000004F1 31 F6                           	XOR	ESI,ESI
   411 000004F3 E8 [00000000]                   	CALL	_io_load_eflags
   412 000004F8 0D 00040000                     	OR	EAX,262144
   413 000004FD 50                              	PUSH	EAX
   414 000004FE E8 [00000000]                   	CALL	_io_store_eflags
   415 00000503 E8 [00000000]                   	CALL	_io_load_eflags
   416 00000508 5A                              	POP	EDX
   417 00000509 A9 00040000                     	TEST	EAX,262144
   418 0000050E 74 05                           	JE	L23
   419 00000510 BE 00000001                     	MOV	ESI,1
   420 00000515                                 L23:
   421 00000515 25 FFFBFFFF                     	AND	EAX,-262145
   422 0000051A 50                              	PUSH	EAX
   423 0000051B E8 [00000000]                   	CALL	_io_store_eflags
   424 00000520 89 F0                           	MOV	EAX,ESI
   425 00000522 5B                              	POP	EBX
   426 00000523 84 C0                           	TEST	AL,AL
   427 00000525 75 31                           	JNE	L26
   428 00000527                                 L24:
   429 00000527 FF 75 0C                        	PUSH	DWORD [12+EBP]
   430 0000052A FF 75 08                        	PUSH	DWORD [8+EBP]
   431 0000052D E8 [00000000]                   	CALL	_memtest_sub
   432 00000532 89 C3                           	MOV	EBX,EAX
   433 00000534 58                              	POP	EAX
   434 00000535 89 F0                           	MOV	EAX,ESI
   435 00000537 5A                              	POP	EDX
   436 00000538 84 C0                           	TEST	AL,AL
   437 0000053A 75 09                           	JNE	L27
   438 0000053C                                 L25:
   439 0000053C 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   440 0000053F 89 D8                           	MOV	EAX,EBX
   441 00000541 5B                              	POP	EBX
   442 00000542 5E                              	POP	ESI
   443 00000543 5D                              	POP	EBP
   444 00000544 C3                              	RET
   445 00000545                                 L27:
   446 00000545 E8 [00000000]                   	CALL	_load_cr0
   447 0000054A 25 9FFFFFFF                     	AND	EAX,-1610612737
   448 0000054F 50                              	PUSH	EAX
   449 00000550 E8 [00000000]                   	CALL	_store_cr0
   450 00000555 58                              	POP	EAX
   451 00000556 EB E4                           	JMP	L25
   452 00000558                                 L26:
   453 00000558 E8 [00000000]                   	CALL	_load_cr0
   454 0000055D 0D 60000000                     	OR	EAX,1610612736
   455 00000562 50                              	PUSH	EAX
   456 00000563 E8 [00000000]                   	CALL	_store_cr0
   457 00000568 59                              	POP	ECX
   458 00000569 EB BC                           	JMP	L24
